{"version":3,"sources":["SidebarOption.js","firebase.js","SidebarOptionNotification.js","Sidebar.js","aa.jpg","Tweetbox.js","Modal.js","ComBox.js","Post.js","Feed.js","Right.js","Notification.js","tt.png","MessageList.js","Comp.js","MessageComp.js","Messages.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","size","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","FieldValue","serverTimestamp","SidebarOptionNotification","name","clearnoti","useState","notification","setNotification","count","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","n","enable","Sidebar","avatar","setClearNoti","modal","setModal","path","to","activeStyle","fontWeight","RiHome7Fill","onClick","window","alert","FiHash","i","length","update","console","log","GrNotification","MailOutlineIcon","BsBookmark","SubjectIcon","PermIdentityIcon","CgMoreO","Button","variant","fullWidth","Avatar","src","isOpen","portal","onClose","style","paddingLeft","paddingTop","href","onclick","render","renderProps","disabled","clientId","buttonText","onLogoutSuccess","Tweetbox","re","useRef","tweet","setTweet","image","setImage","url","setUrl","setError","setProgress","loading","setLoading","nameu","removeimage","filehandler","e","a","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","storageRef","ref","onSubmit","preventDefault","height","width","value","onChange","placeholder","minRows","maxRows","float","marginLeft","color","htmlFor","cursor","type","display","put","on","snap","percentage","bytesTransferred","totalBytes","err","add","displayname","username","verification","time","like","Modal","open","children","ReactDom","createPortal","document","getElementById","ComBox","postusername","useravatar","comment","setComment","rep","isActive","setIsOpen","fontSize","marginTop","padding","moment","toDate","startOf","fromNow","reply","who","Post","postid","avatarr","counter","setcounter","liked","isLiked","setActive","isActivec","setActivec","confirm","delete","then","catch","error","Feed","email","posts","setPosts","set","post","Right","sourceType","screenName","options","tweetId","Notification","setColor","color2","setColor2","toggoleColor","MessageList","send","users","setUsers","setText","sent","setSent","u","reciever","message","sender","Comp","user","User","setUser","setFrom","usr","from","sendToWhere","MessageComp","format","Messages","messages","setMessages","search","setSearch","SEND","setSEND","avt","setAvatar","setOpen","chat","setChat","Focus","setFocus","media","setMedia","mediaUrl","setMediaUrl","getUsers","objDiv","scrollTop","scrollHeight","element","clientHeight","filter","toLocaleLowerCase","includes","flexDirection","mes","opacity","cleanOnEnter","onEnter","borderRadius","borderColor","onResize","App","setName","setEmail","responseGoogle","response","profileObj","imageUrl","minWidth","onSuccess","onFailure","cookiePolicy","isSignedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.cd583cb9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ active, text, Icon }) {\r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <h3> \r\n         <Icon size={25}/>\r\n      </h3>\r\n\r\n      <h2>{text}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB23QiSgX9TVOyyy2wTATI_FoPe2UQzgbg\",\r\n  authDomain: \"twitter-clone-69ba6.firebaseapp.com\",\r\n  projectId: \"twitter-clone-69ba6\",\r\n  storageBucket: \"twitter-clone-69ba6.appspot.com\",\r\n  messagingSenderId: \"766075204483\",\r\n  appId: \"1:766075204483:web:ee192ff2fecb3e9e5c7cb6\",\r\n  measurementId: \"G-MN25RN4HQY\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst storage = firebase.storage();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { storage, timestamp, db as default };","import React,{useEffect, useState} from \"react\";\r\nimport \"./SidebarOption.css\";\r\nimport db, {timestamp} from './firebase'\r\n\r\n\r\nfunction SidebarOptionNotification({ active, text, Icon,name,clearnoti }) {\r\n\r\n  const [notification, setNotification]=useState([])\r\n  const [clrnoti, setclrNoti]=useState(clearnoti)\r\n  var count=0;\r\n\r\n  useEffect(() => {\r\n    db.collection('notifications').doc(name).collection('notification').orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n      setNotification(snapshot.docs.map((doc) =>(\r\n        {\r\n          id:doc.id,\r\n          data: doc.data(),             \r\n        }\r\n      )))\r\n    ); \r\n  }, [notification]);\r\n \r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <h3> \r\n         <Icon size={25}/>\r\n      </h3>\r\n\r\n      <h2>{text}</h2>\r\n \r\n         {         \r\n            notification.map(n=>(\r\n              <div className='hide'>\r\n                  {n.data.enable===true?count=count+1:'' }\r\n              </div>       \r\n              \r\n            ))           \r\n          }\r\n\r\n        <p className={count!==0?'notification-circle':'hide'}>\r\n           {count}\r\n        </p>\r\n         \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOptionNotification;","import React,  {useEffect, useState} from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FiHash } from 'react-icons/fi';\r\nimport { CgMoreO } from 'react-icons/cg';\r\nimport { GrNotification }  from 'react-icons/gr';\r\nimport { RiHome7Fill } from 'react-icons/ri';\r\nimport { BsBookmark } from 'react-icons/bs';\r\nimport {   BsThreeDots } from 'react-icons/bs';\r\nimport {Avatar} from '@material-ui/core'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport PureModal from 'react-pure-modal';\r\nimport 'react-pure-modal/dist/react-pure-modal.min.css';\r\nimport SidebarOptionNotification from \"./SidebarOptionNotification\";\r\nimport { BrowserRouter as Router,Switch, Route, NavLink,Link} from 'react-router-dom';\r\nimport db, {timestamp} from './firebase'\r\n\r\n\r\n\r\nfunction Sidebar({name, avatar}) {\r\n\r\n\r\n  const [notification, setNotification]=useState([])\r\n  const [clearnoti, setClearNoti]=useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    db.collection('notifications').doc(name).collection('notification').orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n      setNotification(snapshot.docs.map((doc) =>(\r\n        {\r\n          id:doc.id,\r\n          data: doc.data(),             \r\n        }\r\n      )))\r\n    ); \r\n  }, [notification]);\r\n\r\n\r\n\r\n  function clearNotification(){\r\n      setClearNoti(true)\r\n      for (let i=0; i<=notification.length; i++){\r\n        db.collection('notifications').doc(name).collection('notification').doc(notification[i]?.id).update({\r\n          enable: false \r\n      });\r\n      console.log(i)\r\n      }\r\n\r\n  }\r\n\r\n\r\n  const [modal, setModal] = useState(false);\r\n  return (\r\n    <div className=\"sidebar\">\r\n\r\n      <NavLink path to='/React-TwitterClone'>\r\n      <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n      </NavLink>\r\n\r\n      <NavLink path to='/React-TwitterClone' activeStyle={{fontWeight:'1000'}}>\r\n      <SidebarOption Icon={RiHome7Fill}  text=\"Home\" />\r\n      </NavLink>\r\n\r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n          <SidebarOption Icon={FiHash} text=\"  Explore\" />\r\n      </div>\r\n     \r\n      <div onClick={clearNotification}>\r\n      <NavLink path to='/notification' activeStyle={{fontWeight:'1000'}}>\r\n      <SidebarOptionNotification clearnoti={clearnoti} name={name} Icon={GrNotification} text=\"Notifications\" />\r\n      </NavLink>\r\n      </div>\r\n\r\n      <div >\r\n      <NavLink path to='/messages' activeStyle={{fontWeight:'1000'}}>\r\n      <SidebarOption  Icon={MailOutlineIcon} text=\"Messages\" />\r\n      </NavLink>\r\n      </div>\r\n     \r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n      <SidebarOption Icon={BsBookmark} text=\"Bookmarks\" />\r\n      </div>\r\n\r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n          <SidebarOption Icon={SubjectIcon } text=\"Lists\" />\r\n      </div>\r\n      \r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n          <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n      </div>\r\n      \r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n          <SidebarOption Icon={CgMoreO} text=\"  More\" />  \r\n      </div>\r\n      \r\n      \r\n\r\n      {/* Button -> Tweet */}\r\n      <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n        Tweet\r\n      </Button>\r\n\r\n      <div onClick={() => setModal(true)} className='sidebar-bottom'>\r\n      <h2><Avatar src={avatar}/> </h2>\r\n\r\n        <h4>{name}<br/> <p1 className='sm'>@{name}</p1> </h4>\r\n        \r\n        <BsThreeDots size='20px'/> \r\n      </div>\r\n\r\n      <PureModal \r\n              className='logout-bottom'\r\n              isOpen={modal} \r\n              portal={true}\r\n              onClose={() => {\r\n                setModal(false);\r\n                return true;\r\n               }}>\r\n                 <div className='bottom-div'>\r\n                 <Avatar src={avatar}/>\r\n                 <h4 style={{paddingLeft:'8px'}}>{name}<br/> <p1 className='sm'>@{name}</p1> </h4>\r\n                 </div>\r\n                 <h4 style={{paddingLeft:'5px', paddingTop:'10px', fontWeight:'lighter'}}>Add an existing account</h4>\r\n                 <a href=\"\" onclick=\"dummy(0);return false;\" > \r\n              <GoogleLogout\r\n                  render={renderProps => (\r\n                    <button className='logout' onClick={renderProps.onClick} disabled={renderProps.disabled}>Log Out @{name}</button>\r\n                  )}\r\n                  clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                  buttonText=\"Logout\"\r\n                  onLogoutSuccess\r\n              />  \r\n       </a>\r\n                \r\n        </PureModal>\r\n\r\n\r\n\r\n\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","export default __webpack_public_path__ + \"static/media/aa.14327386.jpg\";","import React, {useState, useEffect, useRef} from 'react'\r\nimport './Tweetbox.css'\r\nimport a from './aa.jpg'\r\nimport {Avatar, Button} from '@material-ui/core'\r\nimport { GrEmoji } from 'react-icons/gr';\r\nimport { AiOutlineFileGif } from 'react-icons/ai';\r\nimport { BiPoll } from 'react-icons/bi';\r\nimport { BsImage } from 'react-icons/bs';\r\nimport {MdSchedule } from 'react-icons/md';\r\nimport {ImCross } from 'react-icons/im';\r\nimport db from './firebase'\r\nimport {storage, timestamp} from './firebase'\r\nimport firebase from 'firebase';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { BounceLoader, BeatLoader, BarlLoader } from 'react-spinners'\r\n\r\n\r\nfunction Tweetbox ({avatar, name}) {\r\n\r\n    \r\n    const re =useRef();  \r\n    const [tweet, setTweet]= useState(null);\r\n    const [image, setImage]=useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [progress, setProgress] = useState(0);   \r\n    const [loading, setLoading]=useState()\r\n    const nameu=  `@${name}`; \r\n    const disabled='';\r\n\r\n     \r\n    const setTweetData =(e)=>{\r\n        setTweet(e.target.value); \r\n       \r\n    }\r\n\r\n    \r\n    function removeimage(){\r\n      setImage('');\r\n    }\r\n\r\n    const postTweet =() =>{  \r\n      \r\n      setLoading(true)\r\n        storageRef.put(image).on(\r\n          \"state_changed\",\r\n          (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n          },\r\n          (err) => {\r\n            setError(err);\r\n          },  \r\n          async () => {\r\n            db.collection('posts').add({\r\n              displayname: name,\r\n              username: nameu,\r\n              avatar: avatar,\r\n              verification: false,\r\n              image: url,\r\n              text: tweet,\r\n              time:firebase.firestore.FieldValue.serverTimestamp(),\r\n              like:0,\r\n            });\r\n\r\n              setTweet(\"\"); \r\n              removeimage(); \r\n              setLoading(false)   \r\n          }          \r\n        );      \r\n    }\r\n\r\n  \r\n\r\n\r\n    const filehandler = async (e) => {\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        let reader = new FileReader();\r\n        \r\n        await setImage(file);\r\n        reader.onloadend = () => {\r\n          setUrl(reader.result);\r\n        };\r\n  \r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        setImage(null);\r\n        setError(\"Please select an image file\");\r\n      }   \r\n    };                 \r\n   const storageRef = storage.ref(`images/${image.name}`);\r\n\r\n    return (\r\n        <div className='tweetbox'>\r\n         \r\n            <form onSubmit={(e=> e.preventDefault())}>\r\n                <div className='tweetboxInput'>\r\n                 <Avatar src={avatar} style={{height:'50px', width:'50px'}}/> \r\n               \r\n     \r\n                    <TextareaAutosize\r\n                       className='auto_height'\r\n                       value={tweet} \r\n                       onChange ={setTweetData}  \r\n                       placeholder=\"What's happening?\" \r\n                       minRows={3}\r\n                       maxRows={20}\r\n                    />                          \r\n                </div>\r\n\r\n\r\n                {\r\n                  loading?\r\n                  <div style={{float:'left', marginLeft:'40%'}}>\r\n                   <BeatLoader  className='loader-position' size={40} color={'grey'}/> \r\n                  </div>\r\n                  :\r\n                  <div>      \r\n                     <a className={image?'image-cross':'hdn'} onClick={removeimage}> \r\n                       <ImCross/>\r\n                   </a> \r\n                  </div>\r\n\r\n                }\r\n\r\n                   \r\n                 <div className={image?'show-image':'hdn'}>\r\n                    <img src={url}/>  \r\n                 </div>\r\n\r\n                 \r\n                <div className='tweetbox-ico'> \r\n                <label ref={re}  htmlFor=\"fileinput\">  <BsImage   size={25} style={{cursor:\"pointer\"}}/> </label>                        \r\n                <input         \r\n                     onChange={filehandler}\r\n                     className=\"tweetBox-imageInput\"\r\n                     id=\"fileinput\"\r\n                     type=\"file\"\r\n                     style={{display:\"none\"}}        \r\n                />                                                 \r\n                <AiOutlineFileGif size={25}/>\r\n                <BiPoll size={25} />\r\n                <GrEmoji size={25}/>\r\n                <MdSchedule size={25}/>\r\n               \r\n                </div>                 \r\n                <Button disabled={tweet || image? disabled:!disabled} onClick={postTweet} className={tweet || image?'tweetbox-button-glow':'tweetbox-button'}> Tweet</Button>\r\n            </form>\r\n\r\n\r\n            <div>\r\n\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Tweetbox as default};\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\n\r\n\r\nexport default function Modal({ open, children, onClose }) {\r\n  if (!open) return null\r\n\r\n  return ReactDom.createPortal(\r\n    <div className='comment-modal-close'>\r\n      <div className=' OVERLAY_STYLES' />\r\n      <div className='MODAL_STYLES'>\r\n        <AiOutlineClose onClick={onClose}/>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.getElementById('root')\r\n  )\r\n}","import React, {useState} from 'react'\r\nimport Modal from './Modal'\r\nimport db from './firebase'\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport firebase from 'firebase';\r\nimport { Avatar } from '@material-ui/core';\r\nimport './combox.css' \r\nimport moment from 'moment'\r\nimport { GoVerified } from 'react-icons/go';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nconst ComBox = ({name, postusername, avatar, time, text, useravatar,displayname}) => {\r\n\r\n  \r\n  const [comment, setComment]=useState('')\r\n  const rep='Replying to';\r\n  const nameu=  `@${name}`;  \r\n  const [isActive, setActive] = useState(true);\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  \r\n  const toggleClass = () => {\r\n    setActive(!isActive);\r\n  };\r\n\r\n    const postComment = (e) =>{\r\n      \r\n        e.preventDefault(); \r\n\r\n        db.collection('posts').add({\r\n            displayname:name,\r\n            username:nameu,\r\n            avatar: useravatar,\r\n            reply:rep,\r\n            image:'',\r\n            who:postusername,\r\n            like:0,\r\n            verification:'',\r\n            text: comment,\r\n            time:firebase.firestore.FieldValue.serverTimestamp(),  \r\n        });\r\n\r\n        db.collection('notifications').doc(displayname).collection('notification').add({\r\n          notification: `${name} Replied To you: ${comment}`, \r\n          enable: true,\r\n          time: firebase.firestore.FieldValue.serverTimestamp(), \r\n      });\r\n          setComment(''); \r\n          setIsOpen(false)\r\n        console.log(rep)\r\n    }\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div  >\r\n               <ChatBubbleOutlineIcon className={!isActive? 'com-c': 'com-bw'} fontSize=\"small\" onClick={() => setIsOpen(true)}/>\r\n                 <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                   <div className='post-summery'>\r\n                      <div className='user-summery'>\r\n                           <Avatar src={avatar}/>\r\n                           <p2>{postusername}</p2>\r\n                           <GoVerified color='grey' style={{marginTop:'15px', padding:'1px'}}/>\r\n                           <p1>{moment(time?.toDate()).startOf(\"minute\").fromNow()}</p1>\r\n                      </div>\r\n                      <p>{text}</p> \r\n                    \r\n                      <br/>\r\n                       <p5>Replying to <p4>{postusername}</p4></p5>\r\n                       <br/>  \r\n                   </div>\r\n                   \r\n                   \r\n                   <div className='tweet-reply'>\r\n                       <Avatar className='reply-avatar' src={useravatar}/>\r\n                        <form className='comment-input' onSubmit={(e)=>e.preventDefault()}>\r\n\r\n                            <TextareaAutosize\r\n                              className='auto_height'\r\n                              onChange ={e=>setComment(e.target.value)} \r\n                              placeholder=\"Tweet your reply\"\r\n                              value={comment}\r\n                              type='text'\r\n                              minRows={1}\r\n                              maxRows={5}\r\n                           />   \r\n                        </form> \r\n                       \r\n                   </div>\r\n                   <button className='btn-modal' onClick={postComment} > Reply </button> \r\n                </Modal>\r\n\r\n               \r\n\r\n\r\n\r\n\r\n\r\n\r\n       \r\n        </div>\r\n\r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default ComBox\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Post.css'\r\nimport {Avatar} from '@material-ui/core'\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { GoVerified } from 'react-icons/go';\r\nimport { FiDelete } from 'react-icons/fi';\r\nimport Modal from './Modal'\r\nimport ComBox from './ComBox'\r\nimport db, { timestamp } from './firebase'\r\nimport moment from 'moment'\r\nimport { SettingsBackupRestore } from '@material-ui/icons'\r\nimport firebase from 'firebase'\r\n\r\nfunction Post({displayname, username, verification, time, text, image, avatar, postid, name, avatarr, reply, who,like}) {\r\n   \r\n    const [counter, setcounter]= useState(like); \r\n    const [liked, isLiked]=useState(false)\r\n    const [isActive, setActive] = useState(true);\r\n    const [isActivec, setActivec] = useState(true);\r\n\r\n    const toggleClass = () => {\r\n      setActive(!isActive);\r\n    };\r\n\r\n\r\n    const counterhandler = ()=>{\r\n        setActive(!isActive);\r\n        isLiked(true); \r\n        \r\n        if(liked){\r\n            setcounter(counter-1);\r\n            isLiked(false)\r\n        }\r\n        else{\r\n            setcounter(counter+1);\r\n        }\r\n\r\n\r\n        db.collection('posts').doc(postid).update({\r\n            like:counter, \r\n        });\r\n        console.log('this is like:',like)\r\n    }\r\n\r\n\r\n    const [tweet, setTweet]= useState(\" \");\r\n\r\n    const postTweet = (e) =>{\r\n        \r\n        e.preventDefault(); \r\n        if(displayname!==name){\r\n        db.collection('posts').add({\r\n            displayname:name,\r\n            username:username,\r\n            avatar: avatarr,\r\n            image: image,\r\n            verification: verification,\r\n            text: text,\r\n            time:firebase.firestore.FieldValue.serverTimestamp(),\r\n            like:0, \r\n        });\r\n         \r\n                db.collection('notifications').doc(displayname).collection('notification').add({\r\n                notification: `${name} Re-tweeted your tweet`,\r\n                enable: true,\r\n                time: firebase.firestore.FieldValue.serverTimestamp()\r\n            });\r\n          }\r\n          else{\r\n              window.alert('You cant retweet your own tweet');\r\n          }  \r\n\r\n        setTweet(\"\"); \r\n        setActivec(!isActivec);\r\n    }\r\n   \r\n  function remove(){\r\n       \r\n      if(window.confirm('Press OK To Delete The Post')){\r\n        db.collection(\"posts\").doc(postid).delete().then(() => {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n      }\r\n \r\n  }\r\n  \r\n    return (\r\n        <div className='post'>\r\n            <div className='post-avatar'>\r\n                <Avatar src={avatar}/>\r\n            </div>\r\n            <div className='post-body'>\r\n                <div className='post-header'>\r\n                     <FiDelete \r\n                     className={`delete-icon ${ name !==displayname && \"delete-hidden\"}`} \r\n                               onClick={remove} size='25px'color='#543c42'\r\n                    />\r\n                    <div className='post-header-text'>\r\n                        <h3> {displayname}{\"\"} <span className=\"post__headerSpecial\">\r\n                             {verification && <GoVerified />}\r\n                              {username} {moment(time?.toDate()).startOf(\"minute\").fromNow()}</span>\r\n                       </h3>\r\n                    </div>\r\n                    <div className='post-header-description'>\r\n                          <p>{reply} <span className='spanwho' color='#00a2ff'>{who}</span></p>\r\n                          <br/>\r\n                         <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                 <img src={image}/>\r\n                 <div className='post-footer'>\r\n                 <ComBox  name={name} displayname={displayname} postusername={username} postid={postid} avatar={avatar} useravatar={avatarr} image={image} time={time} text={text}/> \r\n                 <RepeatIcon  className={!isActivec? 'repeat-c': 'repeat-bw'} onClick={postTweet}  fontSize=\"small\" />        \r\n                 <FavoriteTwoToneIcon  className={!isActive? 'love-c': 'love-bw'} onClick={counterhandler} fontSize=\"small\" />         \r\n                 <PublishIcon fontSize=\"small\" onClick={()=> window.alert('Under Developement')}/>                       \r\n                 </div>\r\n                  {\r\n                      like>0?\r\n                      <div className='move'><p3> {like} </p3></div>\r\n                      :\r\n                      <div>\r\n\r\n                      </div>\r\n                  }\r\n                 \r\n                \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Post as default };\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Feed.css'\r\nimport Tweetbox from './Tweetbox'\r\nimport Post from './Post'\r\nimport db, {timestamp} from './firebase'\r\nimport firebase from 'firebase';\r\n\r\nconst Feed = ({name, avatar, email}) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading]=useState(false);\r\n \r\n  \r\n    useEffect(() => {\r\n        setLoading(true)\r\n        db.collection(\"posts\").orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n        \r\n          setPosts(snapshot.docs.map((doc) =>(\r\n            {\r\n              id: doc.id,\r\n              data: doc.data(),               \r\n            }\r\n          )))\r\n        ); \r\n\r\n                \r\n        db.collection('users').doc(email).set({\r\n          username: name,\r\n          email: email,\r\n          avatar: avatar,\r\n          time:firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n\r\n         setLoading(false)\r\n      }, [avatar]);\r\n\r\n\r\n    return (\r\n        <div className='feed'> \r\n        <div className='feed-header'>\r\n            <h2>Home </h2>\r\n        </div>\r\n\r\n\r\n         <Tweetbox avatar={avatar}  name={name}/>\r\n         \r\n      \r\n           \r\n         {\r\n           posts.map((post) => \r\n           <Post\r\n             key={post.data.text}\r\n             displayname={post.data.displayname}\r\n             username={post.data.username}\r\n             verification={post.data.verification}\r\n             text={post.data.text}\r\n             avatar={post.data.avatar}\r\n             image={post.data.image}\r\n             time={post.data.time}\r\n             like={post.data.like}\r\n             name={name}\r\n             avatarr={avatar}\r\n             postid={post.id}\r\n             reply={post.data.reply}\r\n             who={post.data.who}\r\n             like={post.data.like}\r\n           />\r\n           \r\n         )} \r\n\r\n         \r\n         {\r\n           loading?\r\n            <div>\r\n\r\n           </div>:\r\n         <div className='loader'>     \r\n              \r\n         </div>\r\n\r\n         }\r\n         \r\n\r\n                        \r\n\r\n          \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './Right.css'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n  } from \"react-twitter-embed\";\r\n  import { FiSearch } from 'react-icons/fi';\r\n\r\nconst Right = () => {\r\n    return (\r\n        <div className='right'>\r\n           <div className='right-input'>\r\n               <FiSearch size= '20px'  className='right-search-icon'/>   \r\n                <input type='text' placeholder='Search Twitter'/>\r\n           </div>\r\n           <div className='right-container'>\r\n                <h2>Trends for you</h2>\r\n             \r\n                \r\n                <TwitterTimelineEmbed sourceType='profile' screenName='KAKA' options={{height:300}} />\r\n                <TwitterTimelineEmbed sourceType='profile' screenName='LFC' options={{height:300}} />\r\n                <TwitterTweetEmbed tweetId={\"1399698641535832068\"}/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Right\r\n\r\n","import React,{useEffect, useState} from \"react\";\r\nimport './Notification.css'\r\nimport db, {timestamp} from './firebase'\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport { BounceLoader, BeatLoader, BarlLoader } from 'react-spinners'\r\nimport moment from 'moment'\r\n\r\nconst Notification = ({name}) => {\r\n\r\n \r\n    const [notification, setNotification]=useState([])\r\n    const [color, setColor]=useState(true)\r\n    const [color2, setColor2]=useState(false)\r\n\r\n   \r\n    function toggoleColor(){\r\n      setColor2(!color2)\r\n      setColor(!color)\r\n    }\r\n    useEffect(() => {\r\n        \r\n        db.collection('notifications').doc(name).collection('notification').orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n          setNotification(snapshot.docs.map((doc) =>(\r\n            {\r\n              id:doc.id,\r\n              data: doc.data(),               \r\n            }\r\n          )))\r\n        ); \r\n      }, [notification]);\r\n\r\n\r\n    return (\r\n        <div className='notification'>\r\n           <div className='flexbox'>\r\n                <h3 onClick={toggoleColor} className='lefth'>All</h3>\r\n                <h3 onClick={toggoleColor} className='righth'>Mentions</h3>\r\n           </div>\r\n           <hr className={color?'move-hr-bg':'move-hr'}/> \r\n\r\n           <hr className={color2?'move-hr-r-bg':'move-hr-r'}/> \r\n           <hr/>\r\n\r\n                  {\r\n                    notification.length!==0?\r\n                    notification.map(n=>(\r\n                      <div className='flex'>\r\n                          <h2><TwitterIcon size={45}/></h2>\r\n                          <p>{`${n.data.notification}    `}<p1 className='color-notif'>{moment(n.data.time?.toDate()).startOf(\"minute\").fromNow()}</p1>    <hr/></p> \r\n                                    \r\n                      </div>\r\n                                \r\n                  ))   :\r\n                      <div>\r\n                          <p>You currently have no notifications Loaded</p>\r\n                          <p>When another user comments or retweets to your tweets, A notification warning will appear on the sidebar #Notification</p>\r\n                          <p> And the notification will be displayed here</p>\r\n                      </div>\r\n\r\n                  }\r\n              \r\n                  {\r\n                      notification.length!==0?\r\n                        <div >\r\n\r\n                        </div>\r\n                            :\r\n                        <div className='loader'>     \r\n                            \r\n                        </div>\r\n                  }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","export default __webpack_public_path__ + \"static/media/tt.4882770d.png\";","import React, {useState, useEffect} from 'react'\r\nimport firebase from 'firebase'\r\nimport moment from 'moment'\r\nimport db, {timestamp} from './firebase'\r\nimport {Avatar} from '@material-ui/core'\r\n\r\nconst MessageList = ({name, avatar, send}) => {\r\n\r\n    const [users, setUsers]=useState([])\r\n    const [text, setText]=useState([])\r\n    const [sent, setSent]=useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        db.collection(\"users\").orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n        \r\n          setUsers(snapshot.docs.map((doc) =>(\r\n            {\r\n              id: doc.id,\r\n              data: doc.data(),               \r\n            }\r\n          )))\r\n        ); \r\n        db.collection(\"messages\").doc(name).collection('chat').orderBy(\"time\", \"asc\").onSnapshot((snapshot) =>\r\n        \r\n        setText(snapshot.docs.map((doc) =>(\r\n          {\r\n            id: doc.id,\r\n            data: doc.data(),               \r\n          }\r\n        )))\r\n      ); \r\n        db.collection(\"messages\").doc(send).collection('chat').orderBy(\"time\", \"asc\").onSnapshot((snapshot) =>\r\n        \r\n        setSent(snapshot.docs.map((doc) =>(\r\n          {\r\n            id: doc.id,\r\n            data: doc.data(),               \r\n          }\r\n        )))\r\n      ); \r\n    }, [])\r\n\r\n\r\n    \r\n    return (\r\n        <div className='list'>\r\n            {\r\n               \r\n                users.map((u,i)=>(\r\n                    <div>   \r\n                                  \r\n                        {u.data.username===text[i]?.data.reciever && i<1?\r\n                        <div>\r\n                          \r\n                          <p>{text[text.length-1]?.data.message}</p>\r\n                          <p>{sent[i]?.data.sender} </p>\r\n                          <Avatar src={text[text.length-1]?.data.avatar}/>\r\n\r\n                        </div>\r\n                           :\r\n                           ''\r\n                        }\r\n                      \r\n                    </div>\r\n                ))\r\n            }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageList\r\n","import React, {useState,useRef, useEffect} from 'react'\r\nimport db, {timestamp} from './firebase'\r\nimport firebase from 'firebase'\r\nimport {Avatar} from '@material-ui/core'\r\n\r\nconst Comp = ({user,image,name}) => {\r\n\r\n    const [User,setUser]=useState('')\r\n    const [From,setFrom]=useState('')\r\n\r\n    useEffect(() => {\r\n        console.log(User)\r\n    }, [User])\r\n\r\n    function sendToWhere(usr,name){\r\n\r\n        setUser(usr)\r\n        db.collection('to').doc(name).set({\r\n            to: usr,\r\n          })\r\n\r\n        setFrom(name)\r\n        db.collection('from').doc(name).set({\r\n            from: name,\r\n          })\r\n    }\r\n    return (\r\n        <div className='select-chat'>\r\n           <br/> \r\n            <Avatar className='select-chat-avatar' src={image}/>\r\n          <div className='chats-flex'>  \r\n          <br/> \r\n          <p onClick={()=>sendToWhere(user,name)}>{user} </p> \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comp\r\n","import React, {useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport {Avatar} from '@material-ui/core'\r\nimport { MdDone } from 'react-icons/md';\r\nimport { BounceLoader, BeatLoader, BarlLoader } from 'react-spinners'\r\n\r\n\r\n\r\nconst MessageComp = ({message,time,to,from,reciever,name, avatar,sender,image,loading}) => {\r\n\r\n    return (\r\n        <div>\r\n            <p className={reciever===name?'span-avatar':'hide-modal'}><Avatar src={avatar}/></p>\r\n               \r\n               <div className={!image?'':'hide-modal'}>\r\n                      <p className= {reciever===name?'text-right':'text-left'}>{message} </p>\r\n                </div>\r\n      \r\n            \r\n              {\r\n                  loading?\r\n                  <div style={{float:'left', marginLeft:'40%'}}>\r\n                   <BeatLoader  className='loader-position' size={10} color={'grey'}/> \r\n                  </div>\r\n                  :\r\n                  <div>\r\n                     <img className= {reciever===name?'image-right':'image-left'} src={image} />\r\n                  </div>   \r\n\r\n                }\r\n             <p className={reciever===name?'tstamp-right':'tstamp-left'}>{moment(time?.toDate()).format('LT')} <span className={reciever===name?'hide-modal':''}> <MdDone color='#1DA1F2' size='18px'/></span> </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageComp\r\n","import React, {useState,useRef, useEffect} from 'react'\r\nimport './messages.css'\r\nimport db, {timestamp} from './firebase'\r\nimport {Avatar} from '@material-ui/core'\r\nimport { BrowserRouter as Router,Switch, Route, NavLink,Link} from 'react-router-dom';\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport firebase from 'firebase'\r\nimport { MdClose } from 'react-icons/md';\r\nimport MessageList from './MessageList'\r\nimport Comp from './Comp'\r\nimport MessageComp from './MessageComp'\r\nimport { BsCalendar } from 'react-icons/bs';\r\nimport { storage} from \"./firebase\";\r\nimport { BsImage } from 'react-icons/bs';\r\n\r\nconst Messages = ({name, avatar, email}) => {\r\n\r\n    const [messages, setMessages]=useState('')\r\n    const [text, setText]=useState([])\r\n    const [search, setSearch]=useState('')\r\n    const [SEND, setSEND]=useState('')\r\n    const [from, setFrom]=useState('')\r\n    const [avt, setAvatar]=useState('')\r\n    const [users, setUsers]=useState([])\r\n    const [open, setOpen]=useState(false)\r\n    const [chat, setChat]=useState(false)\r\n    const [Focus, setFocus]=useState(false)\r\n    const [media, setMedia] = useState(\" \");\r\n    const [mediaUrl, setMediaUrl] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [progress, setProgress] = useState(0);\r\n    const [loading, setLoading]=useState()\r\n\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n\r\n      db.collection(\"to\")\r\n      .doc(name)\r\n      .onSnapshot((snapshot) => {\r\n        setSEND(snapshot.data()?.to);\r\n      });\r\n\r\n      db.collection(\"from\")\r\n      .doc(name)\r\n      .onSnapshot((snapshot) => {\r\n        setFrom(snapshot.data()?.from);\r\n      });\r\n    }, [users])\r\n\r\n    useEffect(() => {\r\n        getMsg()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n      var objDiv = document.getElementById(\"textid\");\r\n      objDiv.scrollTop = objDiv.scrollHeight;\r\n\r\n      var element = document.getElementById(\"textid\");\r\n      element.scrollTop = element.scrollHeight - element.clientHeight;\r\n\r\n    }, [chat,text])\r\n    useEffect(() => {\r\n  \r\n\r\n   \r\n      if(!mediaUrl) return;\r\n        \r\n      storageRef.put(media).on(\r\n        \"state_changed\",\r\n        (snap) => {\r\n          let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n          setProgress(percentage);\r\n        },\r\n        (err) => {\r\n          setError(err);\r\n        },\r\n        async () => {\r\n\r\n          db.collection(\"messages\").doc(SEND).collection(\"chat\").add({\r\n            time: firebase.firestore.FieldValue.serverTimestamp(),\r\n            image: mediaUrl,\r\n            sender: name,\r\n            reciever:SEND,\r\n            avatar:avatar,\r\n            email:email,\r\n          });\r\n\r\n          db.collection(\"messages\").doc(name).collection(\"chat\").add({\r\n            time: firebase.firestore.FieldValue.serverTimestamp(),\r\n            image: mediaUrl,\r\n            sender: name,\r\n            reciever:SEND,\r\n            avatar:avatar,\r\n            email:email,\r\n          });\r\n          setMediaUrl(\"\")\r\n \r\n        }\r\n        \r\n      );\r\n     }, [mediaUrl])\r\n\r\n    \r\n      const storageRef = storage.ref(`images/${media.name}`);\r\n\r\n    const send = () => {\r\n      if(!messages) return\r\n      setLoading(true)\r\n      db.collection('messages').doc(SEND).collection('chat').add({\r\n        message: messages,\r\n        sender: name,\r\n        reciever:SEND,\r\n        avatar:avatar,\r\n        email:email,\r\n        time: firebase.firestore.FieldValue.serverTimestamp(),   \r\n      });\r\n\r\n\r\n      db.collection('messages').doc(name).collection('chat').add({\r\n        message: messages,\r\n        sender: name,\r\n        reciever:SEND,\r\n        avatar:avatar,\r\n        email:email,\r\n        time: firebase.firestore.FieldValue.serverTimestamp(),\r\n        \r\n      });\r\n      setLoading(false)\r\n      setMessages('');\r\n    };\r\n\r\n    \r\n    \r\n    function getMsg(){\r\n\r\n        db.collection(\"messages\").doc(name).collection('chat').orderBy(\"time\", \"asc\").onSnapshot((snapshot) =>\r\n        \r\n        setText(snapshot.docs.map((doc) =>(\r\n          {\r\n            id: doc.id,\r\n            data: doc.data(),               \r\n          }\r\n        )))\r\n      ); \r\n    }\r\n   \r\n\r\n \r\n    function getUsers(){\r\n        db.collection(\"users\").onSnapshot((snapshot) =>          \r\n        setUsers(snapshot.docs.map((doc) =>(\r\n        {\r\n            id: doc.id,\r\n            data: doc.data(),               \r\n        }\r\n        )))\r\n    ); \r\n\r\n    }\r\n\r\n    const searchhandler=(e)=>{\r\n        e.preventDefault();\r\n        setSearch(e.target.value)\r\n        const user=users.filter(u=>{\r\n            return u.data.username.toLocaleLowerCase().includes(search.toLocaleLowerCase())\r\n        })\r\n\r\n        if (search==='') {\r\n            getUsers()\r\n            }\r\n            else{\r\n            setUsers(user);\r\n            }     \r\n    }\r\n\r\n    const filehandler = async (e) => {\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        let reader = new FileReader();\r\n  \r\n        await setMedia(file);\r\n        reader.onloadend = () => {\r\n          setMediaUrl(reader.result);\r\n        };\r\n  \r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        setMedia(null);\r\n        setError(\"Please select an image file\");\r\n      }\r\n    };\r\n     \r\n\r\n     function setchat(a){\r\n        setOpen(!open)\r\n        setChat(true)\r\n        setAvatar(a)\r\n    }\r\n\r\n    function closemodal(){\r\n        setOpen(!open)\r\n        setChat(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='messages'>\r\n            <div className='flex-message'>\r\n                <div className='message-box'>\r\n                    <h4>Messages</h4>            \r\n                   <MessageList name={name} avatar={avatar}/>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <div className={!chat?'users-box':'hide-modal'}>\r\n                    <h2>You don’t have a message selected</h2>     \r\n                    <p>Choose one from your existing messages, or start a new one.</p>\r\n                    <br/>\r\n                    <button className='message-select-button' onClick={()=>setOpen(!open)}> New Message</button>               \r\n                  \r\n                    <div className={open?'message-modal':'hide-modal'}> \r\n                       <MdClose onClick={closemodal} style={{cursor:'pointer'}} size='30px'/>\r\n                        <br/>\r\n                        <form onSubmit={()=>setSearch('')}></form>\r\n                        <input type='text' placeholder='Search People...' value={search} onChange={searchhandler}/>\r\n                         <hr style={{height:'1px'}}/>  \r\n                         <br/>  \r\n\r\n                         <h5 className='h5'>Select an user to start conversation</h5>  \r\n                               <div >\r\n                              \r\n                            {\r\n                                users.map(u=>(\r\n                                  <div onClick={()=>setchat(u.data.avatar)}>  \r\n                                   <Comp \r\n                                    name={name}\r\n                                    user={u.data.username} \r\n                                    image={u.data.avatar} \r\n                                 />\r\n                                  </div>\r\n    \r\n                               \r\n                                ))\r\n                            } \r\n                              </div>  \r\n                                              \r\n                    </div>\r\n                    <div className={open?'overlay':'hide-modal' }></div>\r\n                </div>\r\n\r\n\r\n             <div className={chat?'chatbox':'hide-modal'}>\r\n                   <div className='wrap-chat' id='textid'>\r\n                      <div className='chat-header'>\r\n                          <div className='flex-message'>\r\n                                \r\n                                <h2><Avatar src={avt}/></h2>\r\n                                <h3 style={{display:'flex',flexDirection:'column'}}>{SEND} <span className='username-msgs'>{`@${SEND}_${SEND.length}`}</span></h3>        \r\n\r\n                          </div>\r\n  \r\n                            <br/>\r\n                            <hr style={{width:'550px'}}/>\r\n                      </div> \r\n\r\n                      <div className='chat-middle'>\r\n                          <div className='chat-middle-info'>          \r\n                             <h3 style={{fontWeight:'550'}}>{SEND}<span style={{fontWeight:'100', color:'grey'}}>{` @${SEND}${SEND.length}`}</span></h3>        \r\n                             <p>This is a random bio set by the developer himself, for test purpose</p>\r\n                             <p>Info below are fake too</p>\r\n\r\n                                <p style={{color:'grey'}}> <span><BsCalendar/></span>   Joined On {12}'th January 20{20}</p>\r\n                                <br/>\r\n                          </div>\r\n                      </div> \r\n                      <hr/>\r\n                      <div className='message-body'>\r\n                            \r\n                             <div className='text' >                \r\n                                 {text.map(mes=>(  \r\n                                  mes.data.reciever===SEND && mes.data.sender===from || mes.data.reciever===from && mes.data.sender===SEND?\r\n                                    <MessageComp\r\n                                    message={mes.data?.message}\r\n                                    time={mes.data?.time}\r\n                                    to={SEND}\r\n                                    sender={mes.data?.sender}\r\n                                    reciever={mes.data?.reciever}\r\n                                    name={name}\r\n                                    avatar={mes.data.avatar}\r\n                                    image={mes.data.image}\r\n                                    loading={loading}\r\n                                 />\r\n                                 :\r\n                                 ''\r\n                                ))}\r\n                          </div>\r\n \r\n                        </div>\r\n                     \r\n                     </div>  \r\n                     <div className={!Focus?'focused':'pad-left'}>\r\n                     <label htmlFor=\"image\">\r\n                          <BsImage style={{ cursor: \"pointer\", marginTop:'10px',opacity:'.9' }} size='23px' color='#1DA1F2'/>\r\n                          <input\r\n                            type=\"file\"\r\n                            onChange={filehandler}\r\n                            id=\"image\"\r\n                            style={{ display: \"none\" }}\r\n                          />\r\n                    </label>\r\n                     <InputEmoji\r\n                              \r\n                              value={messages}\r\n                              onChange={setMessages}\r\n                              cleanOnEnter\r\n                              onEnter={send}\r\n                              placeholder=\"Start a new message\"\r\n                              borderRadius='20'\r\n                              borderColor='#bfbfbf'\r\n                              height='80'\r\n                              onResize={()=>setFocus(true)}\r\n                            /> \r\n                     </div>\r\n\r\n                 </div>  \r\n             \r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n","import './App.css';\nimport React, {useState,useRef, useEffect} from \"react\";\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Right from './Right';\nimport Notification from './Notification';\nimport {GoogleLogin} from 'react-google-login'\nimport db from './firebase'\nimport a from './tt.png'\nimport { ImTwitter } from 'react-icons/im';\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport Messages from './Messages';\n\n\nfunction App() {\n\n  const [name, setName] =useState('');\n  const [email, setEmail] =useState('');\n  const [avatar, setAvatar] =useState('');\n\n\n  function responseGoogle (response){\n    \n    setEmail(response.profileObj.email)           \n    setName(response.profileObj.name)           \n    setAvatar(response.profileObj.imageUrl)           \n      console.log(response.profileObj)\n  }\n\n\n\n\n  \n  return (\n    <div> \n          {!name? ( \n\n                 <div className=\"left\">\n                   <img src={a}/>\n                   <ImTwitter color='#00a2ff' size='40px' className='ttrico'/>\n                    <h1 style={{float:'left', marginLeft:'-3%', minWidth:'35%', marginTop:'15%', fontSize:'60px'}}>\n                      Happened Before! \n                      <span style={{float:'left',marginTop:'3%', marginLeft:'2%'}}>\n                      <p2 style={{fontSize:'30px'}} > Join TanTwitter today.</p2>\n                      </span>\n                    </h1>\n\n\n                <div className='login'>\n                     <GoogleLogin \n                      render={renderProps => (\n                        <button className='loginbtn' onClick={renderProps.onClick} disabled={renderProps.disabled}><p style={{fontSize:'20px', color:'white'}}>Log In With Google</p></button>\n                      )}\n                      clientId=\"766075204483-lulb8u6h2g1v0h8kp0gsnirlntf170en.apps.googleusercontent.com\"\n                      buttonText=\"Login With Google\"\n                      onSuccess={responseGoogle}\n                      onFailure={responseGoogle}\n                      cookiePolicy={'single_host_origin'}\n                      isSignedIn={true}\n                 />\n              </div> \n              </div>) \n        :( <div className='app'>        \n         <Router>\n\n           <Sidebar name={name} avatar={avatar}/>\n           \n            <Switch>\n\n              <Route path=\"/React-TwitterClone\">\n              <Feed name={name} avatar={avatar} email={email}/>\n              </Route> \n\n              <Route path=\"/messages\">\n              <Messages name={name} avatar={avatar} email={email}/>\n              </Route> \n\n              <Route path=\"/notification\">\n               <Notification name={name}/>\n              </Route>\n\n            </Switch> \n\n            <Right/>\n\n        \n      </Router>  \n      </div>\n     )}\n   \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}