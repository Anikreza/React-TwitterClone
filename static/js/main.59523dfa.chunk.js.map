{"version":3,"sources":["SidebarOption.js","aa.jpg","Sidebar.js","av.jpg","firebase.js","Tweetbox.js","z.jpg","Modal.js","Comment.js","ComBox.js","Comfeed.js","Post.js","a.jpg","zz.jpg","Feed.js","Right.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","size","Sidebar","RiHome7Fill","FiHash","GrNotification","MailOutlineIcon","BsBookmark","SubjectIcon","PermIdentityIcon","CgMoreO","Button","variant","fullWidth","Avatar","src","a","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","FieldValue","serverTimestamp","Tweetbox","re","useRef","useState","tweet","setTweet","image","setImage","url","setUrl","setError","setProgress","filehandler","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","storageRef","ref","name","onChange","value","placeholder","type","htmlFor","style","cursor","id","display","maxHeight","onClick","put","on","snap","percentage","bytesTransferred","totalBytes","err","collection","add","displayname","username","avatar","verification","time","like","Modal","open","children","onClose","ReactDom","createPortal","document","getElementById","ComBox","comment","setComment","isOpen","setIsOpen","fontSize","preventDefault","Comfeed","setComments","useEffect","onSnapshot","snapshot","docs","map","doc","data","Post","countera","setcountera","liked","isLiked","moment","toDate","startOf","fromNow","Feed","posts","setPosts","orderBy","post","Right","sourceType","screenName","options","height","tweetId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4LAeeA,MAZf,YAAgD,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACrC,OACE,sBAAKC,UAAS,wBAAmBH,GAAU,yBAA3C,UACE,6BACG,cAACE,EAAD,CAAME,KAAM,OAGf,6BAAKH,Q,oGCVI,MAA0B,+B,SCiD1BI,MAhCf,WACE,OACE,sBAAKF,UAAU,UAAf,UACE,cAAC,IAAD,CAAaA,UAAU,yBAEvB,cAAC,EAAD,CAAeH,QAAM,EAACE,KAAMI,IAAaL,KAAK,SAC9C,cAAC,EAAD,CAAeC,KAAMK,IAAQN,KAAK,cAClC,cAAC,EAAD,CAAeC,KAAMM,IAAgBP,KAAK,kBAC1C,cAAC,EAAD,CAAeC,KAAMO,IAAiBR,KAAK,aAC3C,cAAC,EAAD,CAAeC,KAAMQ,IAAYT,KAAK,cACtC,cAAC,EAAD,CAAeC,KAAMS,IAAcV,KAAK,UACxC,cAAC,EAAD,CAAeC,KAAMU,IAAkBX,KAAK,YAC5C,cAAC,EAAD,CAAeC,KAAMW,IAASZ,KAAK,WAGnC,cAACa,EAAA,EAAD,CAAQC,QAAQ,WAAWZ,UAAU,iBAAiBa,WAAS,EAA/D,mBAIA,sBAAKb,UAAU,iBAAf,UACA,cAACc,EAAA,EAAD,CAAQC,IAAKC,IAEX,kDAAoB,uBAApB,IAA0B,oBAAIhB,UAAU,KAAd,8BAA1B,OAGA,cAAC,IAAD,CAAaC,KAAK,gB,kDC1CX,I,+BCgBTgB,G,MAFcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKMC,aACjBC,EAAUV,IAASU,U,GACPV,IAASS,UAAUE,WAAWC,gB,sBCFhD,SAASC,IAEL,IAAMC,EAAIC,mBAEV,EAAsCC,mBAAS,MAA/C,mBACA,GADA,UACyBA,mBAAS,MAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,KAAjC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA0BN,mBAAS,IAAnC,mBAAcO,GAAd,WACA,EAA+BP,mBAAS,IAAxC,mBACA,GADA,UACgCA,mBAAS,IAAzC,mBAAiBQ,GAAjB,WAkCMC,EAAW,uCAAG,WAAOC,GAAP,iBAAA5B,EAAA,2DACZ6B,EAAOD,EAAEE,OAAOC,MAAM,IADV,uBAGZC,EAAS,IAAIC,WAHD,SAKVX,EAASO,GALC,OAMhBG,EAAOE,UAAY,WACjBV,EAAOQ,EAAOG,SAGhBH,EAAOI,cAAcP,GAVL,uBAYhBP,EAAS,MACTG,EAAS,+BAbO,4CAAH,sDAgBZY,EAAazB,EAAQ0B,IAAR,iBAAsBjB,EAAMkB,OAI9C,OACI,qBAAKvD,UAAU,WAAf,SACI,iCACI,sBAAKA,UAAU,gBAAf,UACC,cAACc,EAAA,EAAD,CAAQC,IAAK,yPAEb,uBACCyC,SAAW,SAAAZ,GAAC,OAAER,EAASQ,EAAEE,OAAOW,QAChCC,YAAY,oBACZC,KAAK,YAIP,sBAAK3D,UAAU,eAAf,UACA,wBAAOsD,IAAKtB,EAAK4B,QAAQ,YAAzB,eAAuC,cAAC,IAAD,CAAW3D,KAAM,GAAI4D,MAAO,CAACC,OAAO,aAA3E,OACA,uBACKN,SAAUb,EACV3C,UAAU,sBACV+D,GAAG,YACHJ,KAAK,OACLE,MAAO,CAACG,QAAQ,UAErB,cAAC,IAAD,CAAkB/D,KAAM,KACxB,cAAC,IAAD,CAAQA,KAAM,KACd,cAAC,IAAD,CAASA,KAAM,KACf,cAAC,IAAD,CAAYA,KAAM,QAGlB,qBAAMc,IAAKwB,EAAKsB,MAAO,CAACI,UAAU,WAElC,cAACtD,EAAA,EAAD,CAASuD,QAjFJ,WAEbb,EAAWc,IAAI9B,GAAO+B,GACpB,iBACA,SAACC,GACC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAc,IAC7D9B,EAAY4B,MAEd,SAACG,GACChC,EAASgC,KAPb,sBASE,sBAAAzD,EAAA,sDACEC,EAAGyD,WAAW,SAASC,IAAI,CACzBC,YAAY,mBACZC,SAAS,mBACTC,OAAQ,uPACRC,cAAc,EACd1C,MAAOE,EACPzC,KAAMqC,EACN6C,KAAK9D,IAASS,UAAUE,WAAWC,kBACnCmD,KAAK,KAELzC,EAAO,MACPJ,EAAS,KAZb,6CAsEmCpC,UAAU,kBAAvC,yB,MC9GD,I,+DCKA,SAASkF,EAAT,GAA6C,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAC9C,OAAKF,EAEEG,IAASC,aACd,sBAAKvF,UAAU,sBAAf,UACE,qBAAKA,UAAU,oBACf,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAgBkE,QAASmB,IACxBD,QAGLI,SAASC,eAAe,SAVR,KCHpB,I,iBCmCeC,EAhCA,WAEX,MAA6BxD,mBAAS,IAAtC,mBAAOyD,EAAP,KAAgBC,EAAhB,KAUA,EAA4B1D,oBAAS,GAArC,mBAAO2D,EAAP,KAAeC,EAAf,KAEA,OACI,gCACO,cAAC,IAAD,CAAuBC,SAAS,QAAQ7B,QAAS,kBAAM4B,GAAU,MAC/D,cAACZ,EAAD,CAAOC,KAAMU,EAAQR,QAAS,kBAAMS,GAAU,IAA9C,SACA,uBAAM9F,UAAU,gBAAhB,UACA,uBACCwD,SAAW,SAAAZ,GAAC,OAAEgD,EAAWhD,EAAEE,OAAOW,QAClCC,YAAY,mBACZC,KAAK,SACL,wBAAQ3D,UAAU,MAAMkE,QApBlB,SAACtB,GACjBA,EAAEoD,iBACF/E,EAAGyD,WAAW,YAAYC,IAAI,CAC1B7E,KAAM6F,EACNd,SAAS,gBAEbe,EAAW,MAcD,8BCAHK,EAvBC,WAEZ,MAA+B/D,mBAAS,IAAxC,mBAAiBgE,GAAjB,WASA,OAPAC,qBAAU,WACNlF,EAAGyD,WAAW,YAAY0B,YAAW,SAACC,GAAD,OACnCH,EAAYG,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAE5C,IAID,qBAAKzG,UAAU,SAAf,SAEE,cAAC,EAAD,OCJV,SAAS0G,EAAT,GAAuF,IAAxE9B,EAAuE,EAAvEA,YAAaC,EAA0D,EAA1DA,SAAUE,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,KAAMlF,EAA4B,EAA5BA,KAAMuC,EAAsB,EAAtBA,MAAOyC,EAAe,EAAfA,OAEnE,GAFkF,EAAPG,KAE5C/C,mBAAS,IAAxC,mBAAOyE,EAAP,KAAiBC,EAAjB,KACA,EAAuB1E,oBAAS,GAAhC,mBAAO2E,EAAP,KAAcC,EAAd,KAkBA,EAAyB5E,mBAAS,KAAlC,mBAAcE,GAAd,WAmBA,OACI,sBAAKpC,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAACc,EAAA,EAAD,CAAQC,IAAK+D,MAEjB,sBAAK9E,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UAEI,qBAAKA,UAAU,mBAAf,SACI,mCAAM4E,EAAa,IAAnB,IAAwB,uBAAM5E,UAAU,sBAAhB,UAClB+E,GAAe,cAAE,IAAF,CAAa/E,UAAU,gBACrC6E,EAFiB,IAENkC,IAAM,OAAC/B,QAAD,IAACA,OAAD,EAACA,EAAMgC,UACrBC,QAAQ,UACZC,kBAGV,qBAAKlH,UAAU,0BAAf,SACK,4BAAIF,SAGZ,qBAAKiB,IAAKsB,IACV,sBAAKrC,UAAU,cAAf,UACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAYkE,QAzCP,SAACtB,GACfA,EAAEoD,iBACF/E,EAAGyD,WAAW,SAASC,IAAI,CACvBC,YAAYA,EACZC,SAASA,EACTC,OAAQA,EACRzC,MAAOA,EACP0C,aAAcA,EACdjF,KAAMA,EACNkF,KAAKA,EACLC,KAAK0B,IAETvE,EAAS,MA6BiC2D,SAAS,UAC1C,cAAC,IAAD,CAAoB7B,QAtDT,WACpB4C,GAAQ,GACLD,GACCD,EAAYD,EAAS,GACrBG,GAAQ,IAGRF,EAAYD,EAAS,IA+C8BZ,SAAS,UACvD,cAAC,IAAD,CAAaA,SAAS,aAEtB,qBAAK/F,UAAU,OAAf,SAAsB,mCAAM2G,EAAN,eCnFxB,ICAA,IDAA,IEuDAQ,EA5CF,WAET,MAA0BjF,mBAAS,IAAnC,mBAAOkF,EAAP,KAAcC,EAAd,KAWA,OARAlB,qBAAU,WACNlF,EAAGyD,WAAW,SAAS4C,QAAQ,OAAQ,QAAQlB,YAAW,SAACC,GAAD,OACxDgB,EAAShB,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAEzC,IAKD,sBAAKzG,UAAU,OAAf,UACA,qBAAKA,UAAU,cAAf,SACI,yCAEH,cAAC,EAAD,IAGCoH,EAAMb,KAAI,SAACgB,GAAD,OACV,cAAC,EAAD,CAEE3C,YAAa2C,EAAK3C,YAClBC,SAAU0C,EAAK1C,SACfE,aAAcwC,EAAKxC,aACnBjF,KAAMyH,EAAKzH,KACXgF,OAAQyC,EAAKzC,OACbzC,MAAOkF,EAAKlF,MACZ2C,KAAMuC,EAAKvC,KACXC,KAAMsC,EAAKtC,MARNsC,EAAKzH,a,gBCLP0H,GApBD,WACV,OACI,sBAAKxH,UAAU,QAAf,UACG,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAUC,KAAM,OAAQD,UAAU,sBACjC,uBAAO2D,KAAK,OAAOD,YAAY,sBAEpC,sBAAK1D,UAAU,kBAAf,UAEK,gDAGA,cAAC,IAAD,CAAsByH,WAAW,UAAUC,WAAW,OAAOC,QAAS,CAACC,OAAO,OAC9E,cAAC,IAAD,CAAsBH,WAAW,UAAUC,WAAW,cAAcC,QAAS,CAACC,OAAO,OACrF,cAAC,IAAD,CAAmBC,QAAS,+BCP7BC,OAVf,WACE,OACE,sBAAK9H,UAAU,MAAf,UACK,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,QCCM+H,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFlD,SAASC,eAAe,SAM1BsC,M","file":"static/js/main.59523dfa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ active, text, Icon }) {\r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <h3> \r\n         <Icon size={25}/>\r\n      </h3>\r\n\r\n      <h2>{text}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;","export default __webpack_public_path__ + \"static/media/aa.368c59a9.jpg\";","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FiHash } from 'react-icons/fi';\r\nimport { CgMoreO } from 'react-icons/cg';\r\nimport { GrNotification }  from 'react-icons/gr';\r\nimport { RiHome7Fill } from 'react-icons/ri';\r\nimport { BsBookmark } from 'react-icons/bs';\r\nimport {   BsThreeDots } from 'react-icons/bs';\r\nimport a from './aa.jpg'\r\nimport {Avatar} from '@material-ui/core'\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n\r\n      <SidebarOption active Icon={RiHome7Fill} text=\"Home\" />\r\n      <SidebarOption Icon={FiHash} text=\"  Explore\" />\r\n      <SidebarOption Icon={GrNotification} text=\"Notifications\" />\r\n      <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n      <SidebarOption Icon={BsBookmark} text=\"Bookmarks\" />\r\n      <SidebarOption Icon={SubjectIcon } text=\"Lists\" />\r\n      <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n      <SidebarOption Icon={CgMoreO} text=\"  More\" />    \r\n\r\n      {/* Button -> Tweet */}\r\n      <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n        Tweet\r\n      </Button>\r\n\r\n      <div className='sidebar-bottom'>\r\n      <Avatar src={a}/> \r\n\r\n        <h4>Tanvir Reza Anik<br/> <p1 className='sm'>@TanvirRezaAnik1</p1> </h4>\r\n        \r\n        \r\n        <BsThreeDots size='20px'/>\r\n      </div>\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","export default __webpack_public_path__ + \"static/media/av.10fee269.jpg\";","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB23QiSgX9TVOyyy2wTATI_FoPe2UQzgbg\",\r\n  authDomain: \"twitter-clone-69ba6.firebaseapp.com\",\r\n  projectId: \"twitter-clone-69ba6\",\r\n  storageBucket: \"twitter-clone-69ba6.appspot.com\",\r\n  messagingSenderId: \"766075204483\",\r\n  appId: \"1:766075204483:web:ee192ff2fecb3e9e5c7cb6\",\r\n  measurementId: \"G-MN25RN4HQY\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst storage = firebase.storage();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { storage, timestamp, db as default };","import React, {useState, useEffect, useRef} from 'react'\r\nimport './Tweetbox.css'\r\nimport a from './av.jpg'\r\nimport {Avatar, Button} from '@material-ui/core'\r\nimport { GrEmoji } from 'react-icons/gr';\r\nimport { AiOutlineFileGif } from 'react-icons/ai';\r\nimport { BiPoll } from 'react-icons/bi';\r\nimport { BsImage } from 'react-icons/bs';\r\nimport {MdSchedule } from 'react-icons/md';\r\nimport db from './firebase'\r\nimport {storage, timestamp} from './firebase'\r\nimport moment from 'moment'\r\nimport firebase from 'firebase';\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\r\n\r\n\r\nfunction Tweetbox () {\r\n\r\n    const re =useRef()\r\n\r\n    const [chosenEmoji, setChosenEmoji] = useState(null); \r\n    const [tweet, setTweet]= useState(\" \");\r\n    const [image, setImage]=useState(\" \");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [timeStamp,setTimestamp]=useState(\"\");\r\n    const [progress, setProgress] = useState(0);\r\n\r\n\r\n    const postTweet =() =>{\r\n           \r\n        storageRef.put(image).on(\r\n          \"state_changed\",\r\n          (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n          },\r\n          (err) => {\r\n            setError(err);\r\n          },  \r\n          async () => {\r\n            db.collection('posts').add({\r\n              displayname:\"Tanvir Reza Anik\",\r\n              username:\"@TanvirRezaAnik1\",\r\n              avatar: 'https://scontent.fcgp17-1.fna.fbcdn.net/v/t1.6435-9/151205961_1904845516357802_3308911151071232396_n.jpg?_nc_cat=111&ccb=1-3&_nc_sid=09cbfe&_nc_ohc=LLbvfeotRxIAX8QBA7P&_nc_ht=scontent.fcgp17-1.fna&oh=7db596091b8245ce71c1360b9cfda91b&oe=60E83452',\r\n              verification: false,\r\n              image: url,\r\n              text: tweet,\r\n              time:firebase.firestore.FieldValue.serverTimestamp(),\r\n              like:'',\r\n            });\r\n              setUrl(null);\r\n              setTweet(\" \");     \r\n          }          \r\n        );      \r\n    }\r\n\r\n  \r\n\r\n\r\n    const filehandler = async (e) => {\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        let reader = new FileReader();\r\n  \r\n        await setImage(file);\r\n        reader.onloadend = () => {\r\n          setUrl(reader.result);\r\n        };\r\n  \r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        setImage(null);\r\n        setError(\"Please select an image file\");\r\n      }   \r\n    };                 \r\n   const storageRef = storage.ref(`images/${image.name}`);\r\n\r\n\r\n\r\n    return (\r\n        <div className='tweetbox'>\r\n            <form>\r\n                <div className='tweetboxInput'>\r\n                 <Avatar src={\"https://scontent.fcgp17-1.fna.fbcdn.net/v/t1.6435-9/151205961_1904845516357802_3308911151071232396_n.jpg?_nc_cat=111&ccb=1-3&_nc_sid=09cbfe&_nc_ohc=LLbvfeotRxIAX8QBA7P&_nc_ht=scontent.fcgp17-1.fna&oh=7db596091b8245ce71c1360b9cfda91b&oe=60E83452\"}/> \r\n\r\n                 <input \r\n                  onChange ={e=>setTweet(e.target.value)} \r\n                  placeholder=\"what's happening?\"\r\n                  type='text' /> \r\n                                        \r\n                </div>\r\n\r\n                <div className='tweetbox-ico'> \r\n                <label ref={re}  htmlFor=\"fileinput\">  <BsImage   size={25} style={{cursor:\"pointer\"}}/> </label>                        \r\n                <input         \r\n                     onChange={filehandler}\r\n                     className=\"tweetBox-imageInput\"\r\n                     id=\"fileinput\"\r\n                     type=\"file\"\r\n                     style={{display:\"none\"}}        \r\n                />                                                 \r\n                <AiOutlineFileGif size={25}/>\r\n                <BiPoll size={25} />\r\n                <GrEmoji size={25}/>\r\n                <MdSchedule size={25}/>\r\n\r\n                </div>           \r\n                <img  src={url} style={{maxHeight:\"350px\"}} /> \r\n              \r\n                <Button  onClick={postTweet} className='tweetbox-button'> Tweet</Button>\r\n               \r\n            </form>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Tweetbox as default};\r\n","export default __webpack_public_path__ + \"static/media/z.675a4f18.jpg\";","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\n\r\n\r\nexport default function Modal({ open, children, onClose }) {\r\n  if (!open) return null\r\n\r\n  return ReactDom.createPortal(\r\n    <div className='comment-modal-close'>\r\n      <div className=' OVERLAY_STYLES' />\r\n      <div className='MODAL_STYLES'>\r\n        <AiOutlineClose onClick={onClose}/>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.getElementById('root')\r\n  )\r\n}","import React from 'react'\r\n\r\n\r\nconst Comment = ({text}) => {\r\n\r\n   \r\n    return (\r\n        <div className='combox'>          \r\n              <p> @Anikreza : <p2> {text} </p2> </p>\r\n                                   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import React, {useState, useEffect} from 'react'\r\nimport Modal from './Modal'\r\nimport db from './firebase'\r\nimport Comfeed from './Comfeed'\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\n\r\nconst ComBox = () => {\r\n\r\n    const [comment, setComment]= useState([]);\r\n    const postComment = (e) =>{\r\n        e.preventDefault(); \r\n        db.collection('comments').add({\r\n            text: comment,\r\n            username:\"22ndSeaHawk\",\r\n        });\r\n        setComment(\" \");\r\n      \r\n    }\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <div  >\r\n               <ChatBubbleOutlineIcon fontSize=\"small\" onClick={() => setIsOpen(true)}/>\r\n                 <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                 <form className='comment-input'>\r\n                 <input            \r\n                  onChange ={e=>setComment(e.target.value)} \r\n                  placeholder=\"Tweet your reply\"\r\n                  type='text' />     \r\n                  <button className='btn' onClick={postComment} > Reply </button>  \r\n                  </form>                   \r\n                </Modal>\r\n \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ComBox\r\n","\r\nimport React, {useState, useEffect} from 'react'\r\nimport db from './firebase'\r\nimport Comment from './Comment'\r\nimport ComBox from './ComBox'\r\n\r\nconst Comfeed = () => {\r\n\r\n    const [comments, setComments]= useState([]);\r\n    \r\n    useEffect(() => {\r\n        db.collection(\"comments\").onSnapshot((snapshot) =>\r\n          setComments(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n      }, []);\r\n\r\n\r\n    return (\r\n        <div className='combox'>\r\n\r\n          <ComBox />  \r\n                   \r\n  \r\n         \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comfeed\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Post.css'\r\nimport av from './av.jpg'\r\nimport z from './z.jpg'\r\nimport {Avatar} from '@material-ui/core'\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { GoVerified } from 'react-icons/go';\r\nimport Modal from './Modal'\r\nimport Comfeed from './Comfeed'\r\nimport db, { timestamp } from './firebase'\r\nimport moment from 'moment'\r\n\r\n\r\nfunction Post({displayname, username, verification, time, text, image, avatar, like}) {\r\n   \r\n    const [countera, setcountera]= useState(0); \r\n    const [liked, isLiked]=useState(false)\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    const counterhandlera = ()=>{\r\n        isLiked(true); \r\n        if(liked){\r\n            setcountera(countera-1);\r\n            isLiked(false)\r\n        }\r\n        else{\r\n            setcountera(countera+1);\r\n        }    \r\n    }\r\n    \r\n    const [tweet, setTweet]= useState(\" \");\r\n    const postTweet = (e) =>{\r\n        e.preventDefault(); \r\n        db.collection('posts').add({\r\n            displayname:displayname,\r\n            username:username,\r\n            avatar: avatar,\r\n            image: image,\r\n            verification: verification,\r\n            text: text,\r\n            time:time,\r\n            like:countera, \r\n        });\r\n        setTweet(\" \");\r\n      \r\n    }\r\n    \r\n  \r\n  \r\n    return (\r\n        <div className='post'>\r\n            <div className='post-avatar'>\r\n                <Avatar src={avatar}/>\r\n            </div>\r\n            <div className='post-body'>\r\n                <div className='post-header'>\r\n                    \r\n                    <div className='post-header-text'>\r\n                        <h3> {displayname}{\" \"} <span className=\"post__headerSpecial\">\r\n                             {verification &&< GoVerified className='post__badge'/>}\r\n                              {username} {moment(time?.toDate())\r\n                                 .startOf(\"minute\")\r\n                             .fromNow()}</span>\r\n                       </h3>\r\n                    </div>\r\n                    <div className='post-header-description'>\r\n                         <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                 <img src={image}/>\r\n                 <div className='post-footer'>\r\n                 <Comfeed/> \r\n                 <RepeatIcon onClick={postTweet}  fontSize=\"small\" />        \r\n                 <FavoriteBorderIcon onClick={counterhandlera} fontSize=\"small\" />           \r\n                 <PublishIcon fontSize=\"small\" />                       \r\n                 </div>\r\n                 <div className='move'><p3> {countera} </p3></div>\r\n                \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Post as default };\r\n","export default __webpack_public_path__ + \"static/media/a.2324b533.jpg\";","export default __webpack_public_path__ + \"static/media/zz.ec591909.jpg\";","import React, {useState, useEffect} from 'react'\r\nimport './Feed.css'\r\nimport Tweetbox from './Tweetbox'\r\nimport Post from './Post'\r\nimport Comfeed from './Comfeed'\r\nimport a from './a.jpg'\r\nimport aa from './aa.jpg'\r\nimport z from './z.jpg'\r\nimport zz from './zz.jpg'\r\nimport db, {timestamp} from './firebase'\r\n\r\nconst Feed = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n  \r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n          setPosts(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n      }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className='feed'> \r\n        <div className='feed-header'>\r\n            <h2>Home </h2>\r\n        </div>\r\n         <Tweetbox/>\r\n        \r\n         \r\n         {posts.map((post) => \r\n          <Post\r\n            key={post.text}\r\n            displayname={post.displayname}\r\n            username={post.username}\r\n            verification={post.verification}\r\n            text={post.text}\r\n            avatar={post.avatar}\r\n            image={post.image}\r\n            time={post.time}\r\n            like={post.like}\r\n            \r\n          />\r\n          \r\n        )}\r\n\r\n\r\n\r\n          \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './Right.css'\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n  } from \"react-twitter-embed\";\r\n  import { FiSearch } from 'react-icons/fi';\r\n\r\nconst Right = () => {\r\n    return (\r\n        <div className='right'>\r\n           <div className='right-input'>\r\n               <FiSearch size= '20px'  className='right-search-icon'/>   \r\n                <input type='text' placeholder='Search Twitter'/>\r\n           </div>\r\n           <div className='right-container'>\r\n                \r\n                <h2>Trends for you</h2>\r\n               \r\n                \r\n                <TwitterTimelineEmbed sourceType='profile' screenName='KAKA' options={{height:300}} />\r\n                <TwitterTimelineEmbed sourceType='profile' screenName='liverpoolfc' options={{height:300}} />\r\n                <TwitterTweetEmbed tweetId={\"1399698641535832068\"}/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Right\r\n\r\n","import './App.css';\nimport React from 'react'\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Right from './Right';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n         <Sidebar/>\n         <Feed/>\n         <Right/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}