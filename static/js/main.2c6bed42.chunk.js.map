{"version":3,"sources":["SidebarOption.js","aa.jpg","Sidebar.js","firebase.js","Tweetbox.js","av.jpg","z.jpg","Modal.js","Comfeed.js","ComBox.js","Post.js","a.jpg","zz.jpg","Feed.js","Right.js","tt.png","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","size","Sidebar","name","avatar","useState","modal","setModal","RiHome7Fill","FiHash","GrNotification","MailOutlineIcon","BsBookmark","SubjectIcon","PermIdentityIcon","CgMoreO","Button","variant","fullWidth","onClick","Avatar","src","isOpen","onClose","style","display","paddingLeft","paddingTop","fontWeight","href","onclick","render","renderProps","disabled","clientId","buttonText","onLogoutSuccess","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","FieldValue","serverTimestamp","Tweetbox","re","useRef","tweet","setTweet","image","setImage","url","setUrl","setError","setProgress","nameu","filehandler","e","a","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","storageRef","ref","onSubmit","preventDefault","height","width","value","onChange","placeholder","minRows","maxRows","htmlFor","cursor","id","type","maxHeight","put","on","snap","percentage","bytesTransferred","totalBytes","err","collection","add","displayname","username","verification","time","like","Modal","open","children","ReactDom","createPortal","document","getElementById","Comfeed","postusername","user","ComBox","comment","setComment","comments","setComments","useEffect","orderBy","onSnapshot","snapshot","docs","map","doc","data","console","log","setIsOpen","fontSize","poster","alert","forEach","com","Post","postid","avatarr","countera","setcountera","liked","isLiked","window","confirm","delete","then","catch","error","color","moment","toDate","startOf","fromNow","Feed","posts","setPosts","post","Right","sourceType","screenName","options","tweetId","App","setName","email","setEmail","setAvatar","responseGoogle","response","profileObj","imageUrl","set","float","marginLeft","minWidth","marginTop","onSuccess","onFailure","cookiePolicy","isSignedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2c6bed42.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ active, text, Icon }) {\r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <h3> \r\n         <Icon size={25}/>\r\n      </h3>\r\n\r\n      <h2>{text}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;","export default __webpack_public_path__ + \"static/media/aa.14327386.jpg\";","import React,  {useState} from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FiHash } from 'react-icons/fi';\r\nimport { CgMoreO } from 'react-icons/cg';\r\nimport { GrNotification }  from 'react-icons/gr';\r\nimport { RiHome7Fill } from 'react-icons/ri';\r\nimport { BsBookmark } from 'react-icons/bs';\r\nimport {   BsThreeDots } from 'react-icons/bs';\r\nimport a from './aa.jpg'\r\nimport {Avatar} from '@material-ui/core'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport PureModal from 'react-pure-modal';\r\nimport 'react-pure-modal/dist/react-pure-modal.min.css';\r\n\r\nfunction Sidebar({name, avatar}) {\r\n\r\n  const [modal, setModal] = useState(false);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n\r\n      <SidebarOption active Icon={RiHome7Fill} text=\"Home\" />\r\n      <SidebarOption Icon={FiHash} text=\"  Explore\" />\r\n      <SidebarOption Icon={GrNotification} text=\"Notifications\" />\r\n      <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n      <SidebarOption Icon={BsBookmark} text=\"Bookmarks\" />\r\n      <SidebarOption Icon={SubjectIcon } text=\"Lists\" />\r\n      <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n      <SidebarOption Icon={CgMoreO} text=\"  More\" />   \r\n      \r\n\r\n      {/* Button -> Tweet */}\r\n      <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n        Tweet\r\n      </Button>\r\n\r\n      <div onClick={() => setModal(true)} className='sidebar-bottom'>\r\n      <Avatar src={avatar}/> \r\n\r\n        <h4>{name}<br/> <p1 className='sm'>@{name}</p1> </h4>\r\n        \r\n        <BsThreeDots size='20px'/> \r\n      </div>\r\n\r\n      <PureModal \r\n              className='logout-bottom'\r\n              isOpen={modal} \r\n              onClose={() => {\r\n                setModal(false);\r\n                return true;\r\n               }}>\r\n                 <div style={{display:'flex'}}>\r\n                 <Avatar src={avatar}/>\r\n                 <h4 style={{paddingLeft:'8px'}}>{name}<br/> <p1 className='sm'>@{name}</p1> </h4>\r\n                 </div>\r\n                 <h4 style={{paddingLeft:'5px', paddingTop:'10px', fontWeight:'lighter'}}>Add an existing account</h4>\r\n                 <a href=\"\" onclick=\"dummy(0);return false;\" > \r\n              <GoogleLogout\r\n                  render={renderProps => (\r\n                    <button className='logout' onClick={renderProps.onClick} disabled={renderProps.disabled}>Log Out @{name}</button>\r\n                  )}\r\n                  clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                  buttonText=\"Logout\"\r\n                  onLogoutSuccess\r\n              />  \r\n       </a>\r\n                \r\n        </PureModal>\r\n\r\n\r\n\r\n\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB23QiSgX9TVOyyy2wTATI_FoPe2UQzgbg\",\r\n  authDomain: \"twitter-clone-69ba6.firebaseapp.com\",\r\n  projectId: \"twitter-clone-69ba6\",\r\n  storageBucket: \"twitter-clone-69ba6.appspot.com\",\r\n  messagingSenderId: \"766075204483\",\r\n  appId: \"1:766075204483:web:ee192ff2fecb3e9e5c7cb6\",\r\n  measurementId: \"G-MN25RN4HQY\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst storage = firebase.storage();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { storage, timestamp, db as default };","import React, {useState, useEffect, useRef} from 'react'\r\nimport './Tweetbox.css'\r\nimport a from './aa.jpg'\r\nimport {Avatar, Button} from '@material-ui/core'\r\nimport { GrEmoji } from 'react-icons/gr';\r\nimport { AiOutlineFileGif } from 'react-icons/ai';\r\nimport { BiPoll } from 'react-icons/bi';\r\nimport { BsImage } from 'react-icons/bs';\r\nimport {MdSchedule } from 'react-icons/md';\r\nimport db from './firebase'\r\nimport {storage, timestamp} from './firebase'\r\nimport moment from 'moment'\r\nimport firebase from 'firebase';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\n\r\nfunction Tweetbox ({avatar, name}) {\r\n\r\n    \r\n    const re =useRef() \r\n    const [tweet, setTweet]= useState(\"\");\r\n    const [image, setImage]=useState(\" \");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [timeStamp,setTimestamp]=useState(\"\");\r\n    const [progress, setProgress] = useState(0);   \r\n    const nameu=  `@${name}`; \r\n\r\n\r\n    const postTweet =() =>{       \r\n        storageRef.put(image).on(\r\n          \"state_changed\",\r\n          (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n          },\r\n          (err) => {\r\n            setError(err);\r\n          },  \r\n          async () => {\r\n            db.collection('posts').add({\r\n              displayname: name,\r\n              username: nameu,\r\n              avatar: avatar,\r\n              verification: false,\r\n              image: url,\r\n              text: tweet,\r\n              time:firebase.firestore.FieldValue.serverTimestamp(),\r\n              like:'',\r\n            });\r\n              setUrl(null);\r\n              setTweet(\"\");     \r\n          }          \r\n        );      \r\n    }\r\n\r\n  \r\n\r\n\r\n    const filehandler = async (e) => {\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        let reader = new FileReader();\r\n  \r\n        await setImage(file);\r\n        reader.onloadend = () => {\r\n          setUrl(reader.result);\r\n        };\r\n  \r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        setImage(null);\r\n        setError(\"Please select an image file\");\r\n      }   \r\n    };                 \r\n   const storageRef = storage.ref(`images/${image.name}`);\r\n\r\n   function auto_height(e) {  /* javascript */\r\n    e.style.height = \"1px\";\r\n    e.style.height = (e.scrollHeight)+\"px\";\r\n}\r\n\r\n    return (\r\n        <div className='tweetbox'>\r\n            <form onSubmit={(e=> e.preventDefault())}>\r\n                <div className='tweetboxInput'>\r\n                 <Avatar src={avatar} style={{height:'50px', width:'50px'}}/> \r\n               \r\n     \r\n                    <TextareaAutosize\r\n                       className='auto_height'\r\n                       value={tweet} \r\n                       onChange ={e=>setTweet(e.target.value)} \r\n                       placeholder=\"What's happening?\" \r\n                       minRows={3}\r\n                       maxRows={20}\r\n                    />                          \r\n                </div>\r\n\r\n                <div className='tweetbox-ico'> \r\n                <label ref={re}  htmlFor=\"fileinput\">  <BsImage   size={25} style={{cursor:\"pointer\"}}/> </label>                        \r\n                <input         \r\n                     onChange={filehandler}\r\n                     className=\"tweetBox-imageInput\"\r\n                     id=\"fileinput\"\r\n                     type=\"file\"\r\n                     style={{display:\"none\"}}        \r\n                />                                                 \r\n                <AiOutlineFileGif size={25}/>\r\n                <BiPoll size={25} />\r\n                <GrEmoji size={25}/>\r\n                <MdSchedule size={25}/>\r\n\r\n                </div>           \r\n                <img  src={url} style={{maxHeight:\"350px\"}} /> \r\n              \r\n                <Button  onClick={postTweet} className='tweetbox-button'> Tweet</Button>\r\n               \r\n            </form>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Tweetbox as default};\r\n","export default __webpack_public_path__ + \"static/media/av.10fee269.jpg\";","export default __webpack_public_path__ + \"static/media/z.675a4f18.jpg\";","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\n\r\n\r\nexport default function Modal({ open, children, onClose }) {\r\n  if (!open) return null\r\n\r\n  return ReactDom.createPortal(\r\n    <div className='comment-modal-close'>\r\n      <div className=' OVERLAY_STYLES' />\r\n      <div className='MODAL_STYLES'>\r\n        <AiOutlineClose onClick={onClose}/>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.getElementById('root')\r\n  )\r\n}","\r\nimport React, {useState, useEffect} from 'react'\r\nimport db from './firebase'\r\nimport {Avatar, Button} from '@material-ui/core'\r\n\r\nconst Comfeed = ({text, postusername, user}) => {\r\n\r\n \r\n\r\n    return (\r\n        <div className='combox'>\r\n              \r\n           <h5> {user} </h5>\r\n          <p>{postusername}</p>\r\n          <p>{text}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comfeed\r\n","import React, {useState, useEffect} from 'react'\r\nimport Modal from './Modal'\r\nimport db from './firebase'\r\nimport Comfeed from './Comfeed'\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport firebase from 'firebase';\r\n\r\nconst ComBox = ({name, postusername, avatar}) => {\r\n\r\n    const [comment, setComment]= useState([]);\r\n\r\n\r\n\r\n    const postComment = (e) =>{\r\n        e.preventDefault(); \r\n        db.collection('comments').add({\r\n            text: comment,\r\n            username: name,\r\n           \r\n        \r\n            poster: postusername,\r\n        });\r\n        alert(`Replied to ${postusername}`) \r\n        setComment(\" \");\r\n        setComments(\" \");\r\n        console.log(comment)\r\n    }\r\n\r\n    \r\n\r\n    const [comments, setComments]= useState([]);\r\n    \r\n    useEffect(() => {\r\n        db.collection(\"comments\").orderBy(\"time\", \"asc\").onSnapshot((snapshot) =>\r\n          setComments(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n           console.log(comments)\r\n      }, []);\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <div  >\r\n               <ChatBubbleOutlineIcon fontSize=\"small\" onClick={() => setIsOpen(true)}/>\r\n                 <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                 <form className='comment-input'>\r\n                 <input            \r\n                  onChange ={e=>setComment(e.target.value)} \r\n                  placeholder=\"Tweet your reply\"\r\n                  value={comment}\r\n                  type='text' />   \r\n                  <button className='btn' onClick={postComment} > Reply </button>  \r\n                  </form>                   \r\n                </Modal>\r\n\r\n               \r\n\r\n\r\n                {comments.forEach((com) => \r\n         \r\n         <Comfeed\r\n         key={com.text}\r\n         text={com.text}\r\n         username={com.username}\r\n         postusername={com.poster}\r\n       \r\n       />\r\n       \r\n        \r\n          \r\n        )}\r\n\r\n\r\n\r\n\r\n       \r\n        </div>\r\n\r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default ComBox\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Post.css'\r\nimport av from './av.jpg'\r\nimport z from './z.jpg'\r\nimport {Avatar} from '@material-ui/core'\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { GoVerified } from 'react-icons/go';\r\nimport { FiDelete } from 'react-icons/fi';\r\nimport Modal from './Modal'\r\nimport ComBox from './ComBox'\r\nimport db, { timestamp } from './firebase'\r\nimport moment from 'moment'\r\nimport { SettingsBackupRestore } from '@material-ui/icons'\r\n\r\nfunction Post({displayname, username, verification, time, text, image, avatar, postid, name, avatarr}) {\r\n   \r\n    const [countera, setcountera]= useState(0); \r\n    const [liked, isLiked]=useState(false)\r\n    const [sure, setSure]=useState(false)\r\n \r\n   \r\n    const counterhandlera = ()=>{\r\n        isLiked(true); \r\n        if(liked){\r\n            setcountera(countera-1);\r\n            isLiked(false)\r\n        }\r\n        else{\r\n            setcountera(countera+1);\r\n        }    \r\n    }\r\n    //const [id,setId]=useState();\r\n   // useEffect(() => {\r\n    //    db.collection(\"posts\").onSnapshot((snapshot) =>\r\n       // setId(snapshot.docs.map((doc) => ({id: doc.id, ...doc.data()}))  )   \r\n      //  setId(snapshot.docs.map((doc) => (doc.id)))        \r\n      //  ); \r\n    //  }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('this is postid:',postid)\r\n    }, [])\r\n\r\n    const [tweet, setTweet]= useState(\" \");\r\n    const postTweet = (e) =>{\r\n        e.preventDefault(); \r\n        db.collection('posts').add({\r\n            displayname:name,\r\n            username:username,\r\n            avatar: avatarr,\r\n            image: image,\r\n            verification: verification,\r\n            text: text,\r\n            time:time,\r\n            like:countera, \r\n        });\r\n        setTweet(\" \"); \r\n    }\r\n   \r\n  function remove(){\r\n       \r\n      if(window.confirm('Press OK To Delete The Post')){\r\n        db.collection(\"posts\").doc(postid).delete().then(() => {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n      }\r\n \r\n  }\r\n  \r\n    return (\r\n        <div className='post'>\r\n            <div className='post-avatar'>\r\n                <Avatar src={avatar}/>\r\n            </div>\r\n            <div className='post-body'>\r\n                <div className='post-header'>\r\n                     <FiDelete \r\n                     className={`delete-icon ${ name !==displayname && \"delete-hidden\"}`} \r\n                               onClick={remove} size='25px'color='#543c42'\r\n                    />\r\n                    <div className='post-header-text'>\r\n                        <h3> {displayname}{\" \"} <span className=\"post__headerSpecial\">\r\n                             {verification &&< GoVerified className='post__badge'/>}\r\n                              {username} {moment(time?.toDate())\r\n                                 .startOf(\"minute\")\r\n                             .fromNow()}</span>\r\n                       </h3>\r\n                    </div>\r\n                    <div className='post-header-description'>\r\n                         <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                 <img src={image}/>\r\n                 <div className='post-footer'>\r\n                 <ComBox name={name} postusername={username}/> \r\n                 <RepeatIcon onClick={postTweet}  fontSize=\"small\" />        \r\n                 <FavoriteBorderIcon onClick={counterhandlera} fontSize=\"small\" />           \r\n                 <PublishIcon fontSize=\"small\" />                       \r\n                 </div>\r\n                 <div className='move'><p3> {countera} </p3></div>\r\n                \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Post as default };\r\n","export default __webpack_public_path__ + \"static/media/a.2324b533.jpg\";","export default __webpack_public_path__ + \"static/media/zz.ec591909.jpg\";","import React, {useState, useEffect} from 'react'\r\nimport './Feed.css'\r\nimport Tweetbox from './Tweetbox'\r\nimport Post from './Post'\r\nimport Comfeed from './Comfeed'\r\nimport ComBox from './ComBox'\r\nimport a from './a.jpg'\r\nimport aa from './aa.jpg'\r\nimport z from './z.jpg'\r\nimport zz from './zz.jpg'\r\nimport db, {timestamp} from './firebase'\r\n\r\nconst Feed = ({name, avatar}) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n  \r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n          setPosts(snapshot.docs.map((doc) =>(\r\n            {\r\n              id: doc.id,\r\n              data: doc.data(),               \r\n            }\r\n          )))\r\n        ); \r\n      }, []);\r\n\r\n\r\n     \r\n   \r\n        \r\n\r\n    return (\r\n        <div className='feed'> \r\n        <div className='feed-header'>\r\n            <h2>Home </h2>\r\n        </div>\r\n\r\n        \r\n         <Tweetbox avatar={avatar}  name={name}/>\r\n         \r\n             \r\n         {posts.map((post) => \r\n          <Post\r\n            key={post.data.text}\r\n            displayname={post.data.displayname}\r\n            username={post.data.username}\r\n            verification={post.data.verification}\r\n            text={post.data.text}\r\n            avatar={post.data.avatar}\r\n            image={post.data.image}\r\n            time={post.data.time}\r\n            like={post.data.like}\r\n            name={name}\r\n            avatarr={avatar}\r\n            postid={post.id}\r\n          />\r\n          \r\n        )}\r\n\r\n                         \r\n<Comfeed  />\r\n\r\n          \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './Right.css'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n  } from \"react-twitter-embed\";\r\n  import { FiSearch } from 'react-icons/fi';\r\n\r\nconst Right = () => {\r\n    return (\r\n        <div className='right'>\r\n           <div className='right-input'>\r\n               <FiSearch size= '20px'  className='right-search-icon'/>   \r\n                <input type='text' placeholder='Search Twitter'/>\r\n           </div>\r\n           <div className='right-container'>\r\n                <h2>Trends for you</h2>\r\n             \r\n                \r\n                <TwitterTimelineEmbed sourceType='profile' screenName='KAKA' options={{height:300}} />\r\n                <TwitterTimelineEmbed sourceType='profile' screenName='LFC' options={{height:300}} />\r\n                <TwitterTweetEmbed tweetId={\"1399698641535832068\"}/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Right\r\n\r\n","export default __webpack_public_path__ + \"static/media/tt.4882770d.png\";","import './App.css';\nimport React, {useState,useRef, useEffect} from \"react\";\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Right from './Right';\nimport {GoogleLogin} from 'react-google-login'\nimport db from './firebase'\nimport a from './tt.png'\nimport { ImTwitter } from 'react-icons/im';\n\n\n\nfunction App() {\n\n  const [name, setName] =useState('');\n  const [email, setEmail] =useState('');\n  const [avatar, setAvatar] =useState('');\n\n\n  function responseGoogle (response){\n    \n    setEmail(response.profileObj.email)           \n    setName(response.profileObj.name)           \n    setAvatar(response.profileObj.imageUrl)           \n      \n  }\n\n  useEffect(() => {\n    {\n      db.collection('users').doc().set({\n        username: name,\n        email: email,\n        avatar: avatar,\n      })\n    }\n  }, [])\n\n\n  \n  return (\n    <div> \n          {!name? ( \n\n                 <div className=\"left\">\n                   <img src={a}/>\n                   <ImTwitter color='#00a2ff' size='40px' className='ttrico'/>\n                    <h1 style={{float:'left', marginLeft:'-3%', minWidth:'35%', marginTop:'15%', fontSize:'60px'}}>\n                      Happened Before! \n                      <span style={{float:'left',marginTop:'3%', marginLeft:'2%'}}>\n                      <p2 style={{fontSize:'30px'}} > Join TanTwitter today.</p2>\n                      </span>\n                    </h1>\n\n\n                <div className='login'>\n                     <GoogleLogin \n                      render={renderProps => (\n                        <button className='loginbtn' onClick={renderProps.onClick} disabled={renderProps.disabled}><p style={{fontSize:'20px', color:'white'}}>Log In With Google</p></button>\n                      )}\n                      clientId=\"766075204483-lulb8u6h2g1v0h8kp0gsnirlntf170en.apps.googleusercontent.com\"\n                      buttonText=\"Login With Google\"\n                      onSuccess={responseGoogle}\n                      onFailure={responseGoogle}\n                      cookiePolicy={'single_host_origin'}\n                      isSignedIn={true}\n                 />\n              </div> \n              </div>) \n        :( <div className='app'> \n\n         <Sidebar name={name} avatar={avatar}/>\n\n         <Feed name={name} avatar={avatar}/>\n         <Right/>\n      </div>\n     )}\n   \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}