{"version":3,"sources":["SidebarOption.js","aa.jpg","firebase.js","SidebarOptionNotification.js","Sidebar.js","Tweetbox.js","Modal.js","ComBox.js","Post.js","a.jpg","Comfeed.js","Feed.js","Right.js","Notification.js","tt.png","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","size","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","FieldValue","serverTimestamp","SidebarOptionNotification","name","clearnoti","useState","notification","setNotification","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","length","enable","Sidebar","avatar","setClearNoti","modal","setModal","to","RiHome7Fill","onClick","window","alert","FiHash","update","GrNotification","MailOutlineIcon","BsBookmark","SubjectIcon","PermIdentityIcon","CgMoreO","Button","variant","fullWidth","Avatar","src","isOpen","portal","onClose","style","display","paddingLeft","paddingTop","fontWeight","href","onclick","render","renderProps","disabled","clientId","buttonText","onLogoutSuccess","Tweetbox","re","useRef","tweet","setTweet","image","setImage","url","setUrl","setError","setProgress","loading","setLoading","nameu","removeimage","filehandler","e","a","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","storageRef","ref","onSubmit","preventDefault","height","width","value","onChange","placeholder","minRows","maxRows","float","marginLeft","color","htmlFor","cursor","type","put","on","snap","percentage","bytesTransferred","totalBytes","err","add","displayname","username","verification","time","like","Modal","open","children","ReactDom","createPortal","document","getElementById","ComBox","postusername","useravatar","comment","setComment","rep","isActive","setIsOpen","fontSize","marginTop","padding","moment","toDate","startOf","fromNow","reply","who","console","log","Post","postid","avatarr","counter","setcounter","liked","isLiked","setActive","isActivec","setActivec","confirm","delete","then","catch","error","Feed","posts","setPosts","post","Right","sourceType","screenName","options","tweetId","Notification","setColor","color2","setColor2","setReady","toggoleColor","n","App","setName","email","setEmail","setAvatar","responseGoogle","response","profileObj","imageUrl","set","path","minWidth","onSuccess","onFailure","cookiePolicy","isSignedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.06d2909a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ active, text, Icon }) {\r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <h3> \r\n         <Icon size={25}/>\r\n      </h3>\r\n\r\n      <h2>{text}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;","export default __webpack_public_path__ + \"static/media/aa.14327386.jpg\";","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB23QiSgX9TVOyyy2wTATI_FoPe2UQzgbg\",\r\n  authDomain: \"twitter-clone-69ba6.firebaseapp.com\",\r\n  projectId: \"twitter-clone-69ba6\",\r\n  storageBucket: \"twitter-clone-69ba6.appspot.com\",\r\n  messagingSenderId: \"766075204483\",\r\n  appId: \"1:766075204483:web:ee192ff2fecb3e9e5c7cb6\",\r\n  measurementId: \"G-MN25RN4HQY\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst storage = firebase.storage();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { storage, timestamp, db as default };","import React,{useEffect, useState} from \"react\";\r\nimport \"./SidebarOption.css\";\r\nimport db, {timestamp} from './firebase'\r\n\r\n\r\nfunction SidebarOptionNotification({ active, text, Icon,name,clearnoti }) {\r\n\r\n  const [notification, setNotification]=useState([])\r\n  const [clrnoti, setclrNoti]=useState(clearnoti)\r\n\r\n  useEffect(() => {\r\n    db.collection('notifications').doc(name).collection('notification').orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n      setNotification(snapshot.docs.map((doc) =>(\r\n        {\r\n          id:doc.id,\r\n          data: doc.data(),             \r\n        }\r\n      )))\r\n    ); \r\n  }, [notification]);\r\n \r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <h3> \r\n         <Icon size={25}/>\r\n      </h3>\r\n\r\n      <h2>{text}</h2>\r\n\r\n\r\n    \r\n        <p className={ notification?.length!==0 && notification[0]?.data.enable===true?'notification-circle':'hide'}>{notification.length}</p>\r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOptionNotification;","import React,  {useEffect, useState} from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FiHash } from 'react-icons/fi';\r\nimport { CgMoreO } from 'react-icons/cg';\r\nimport { GrNotification }  from 'react-icons/gr';\r\nimport { RiHome7Fill } from 'react-icons/ri';\r\nimport { BsBookmark } from 'react-icons/bs';\r\nimport {   BsThreeDots } from 'react-icons/bs';\r\nimport a from './aa.jpg'\r\nimport {Avatar} from '@material-ui/core'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport PureModal from 'react-pure-modal';\r\nimport 'react-pure-modal/dist/react-pure-modal.min.css';\r\nimport SidebarOptionNotification from \"./SidebarOptionNotification\";\r\nimport { BrowserRouter as Router,Switch, Route, Link} from 'react-router-dom';\r\nimport db, {timestamp} from './firebase'\r\n\r\n\r\n\r\nfunction Sidebar({name, avatar}) {\r\n\r\n\r\n  const [notification, setNotification]=useState([])\r\n  const [clearnoti, setClearNoti]=useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    db.collection('notifications').doc(name).collection('notification').orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n      setNotification(snapshot.docs.map((doc) =>(\r\n        {\r\n          id:doc.id,\r\n          data: doc.data(),             \r\n        }\r\n      )))\r\n    ); \r\n  }, [notification]);\r\n\r\n\r\n\r\n  function clearNotification(){\r\n      setClearNoti(true)\r\n      db.collection('notifications').doc(name).collection('notification').doc(notification[0]?.id).update({\r\n        enable: false \r\n    });\r\n  }\r\n\r\n\r\n  const [modal, setModal] = useState(false);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Link to='/React-TwitterClone'>\r\n      <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n      </Link>\r\n      <Link to='/React-TwitterClone'>\r\n      <SidebarOption active Icon={RiHome7Fill} text=\"Home\" />\r\n      </Link>\r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n          <SidebarOption Icon={FiHash} text=\"  Explore\" />\r\n      </div>\r\n     \r\n      <div onClick={clearNotification}>\r\n      <Link to='/notification'>\r\n      <SidebarOptionNotification clearnoti={clearnoti} name={name} Icon={GrNotification} text=\"Notifications\" />\r\n      </Link>\r\n      </div>\r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n      <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n      </div>\r\n     \r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n      <SidebarOption Icon={BsBookmark} text=\"Bookmarks\" />\r\n      </div>\r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n          <SidebarOption Icon={SubjectIcon } text=\"Lists\" />\r\n      </div>\r\n      \r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n          <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n      </div>\r\n      \r\n      <div onClick={()=> window.alert('Under Developement')}>\r\n          <SidebarOption Icon={CgMoreO} text=\"  More\" />  \r\n      </div>\r\n      \r\n      \r\n\r\n      {/* Button -> Tweet */}\r\n      <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n        Tweet\r\n      </Button>\r\n\r\n      <div onClick={() => setModal(true)} className='sidebar-bottom'>\r\n      <Avatar src={avatar}/> \r\n\r\n        <h4>{name}<br/> <p1 className='sm'>@{name}</p1> </h4>\r\n        \r\n        <BsThreeDots size='20px'/> \r\n      </div>\r\n\r\n      <PureModal \r\n              className='logout-bottom'\r\n              isOpen={modal} \r\n              portal={true}\r\n              onClose={() => {\r\n                setModal(false);\r\n                return true;\r\n               }}>\r\n                 <div style={{display:'flex'}}>\r\n                 <Avatar src={avatar}/>\r\n                 <h4 style={{paddingLeft:'8px'}}>{name}<br/> <p1 className='sm'>@{name}</p1> </h4>\r\n                 </div>\r\n                 <h4 style={{paddingLeft:'5px', paddingTop:'10px', fontWeight:'lighter'}}>Add an existing account</h4>\r\n                 <a href=\"\" onclick=\"dummy(0);return false;\" > \r\n              <GoogleLogout\r\n                  render={renderProps => (\r\n                    <button className='logout' onClick={renderProps.onClick} disabled={renderProps.disabled}>Log Out @{name}</button>\r\n                  )}\r\n                  clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                  buttonText=\"Logout\"\r\n                  onLogoutSuccess\r\n              />  \r\n       </a>\r\n                \r\n        </PureModal>\r\n\r\n\r\n\r\n\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React, {useState, useEffect, useRef} from 'react'\r\nimport './Tweetbox.css'\r\nimport a from './aa.jpg'\r\nimport {Avatar, Button} from '@material-ui/core'\r\nimport { GrEmoji } from 'react-icons/gr';\r\nimport { AiOutlineFileGif } from 'react-icons/ai';\r\nimport { BiPoll } from 'react-icons/bi';\r\nimport { BsImage } from 'react-icons/bs';\r\nimport {MdSchedule } from 'react-icons/md';\r\nimport {ImCross } from 'react-icons/im';\r\nimport db from './firebase'\r\nimport {storage, timestamp} from './firebase'\r\nimport firebase from 'firebase';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { BounceLoader, BeatLoader, BarlLoader } from 'react-spinners'\r\n\r\n\r\nfunction Tweetbox ({avatar, name}) {\r\n\r\n    \r\n    const re =useRef();  \r\n    const [tweet, setTweet]= useState(null);\r\n    const [image, setImage]=useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [progress, setProgress] = useState(0);   \r\n    const [loading, setLoading]=useState()\r\n    const nameu=  `@${name}`; \r\n    const disabled='';\r\n\r\n     \r\n    const setTweetData =(e)=>{\r\n        setTweet(e.target.value); \r\n       \r\n    }\r\n\r\n    \r\n    function removeimage(){\r\n      setImage('');\r\n    }\r\n\r\n    const postTweet =() =>{  \r\n      \r\n      setLoading(true)\r\n        storageRef.put(image).on(\r\n          \"state_changed\",\r\n          (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n          },\r\n          (err) => {\r\n            setError(err);\r\n          },  \r\n          async () => {\r\n            db.collection('posts').add({\r\n              displayname: name,\r\n              username: nameu,\r\n              avatar: avatar,\r\n              verification: false,\r\n              image: url,\r\n              text: tweet,\r\n              time:firebase.firestore.FieldValue.serverTimestamp(),\r\n              like:0,\r\n            });\r\n\r\n              setTweet(\"\"); \r\n              removeimage(); \r\n              setLoading(false)   \r\n          }          \r\n        );      \r\n    }\r\n\r\n  \r\n\r\n\r\n    const filehandler = async (e) => {\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        let reader = new FileReader();\r\n        \r\n        await setImage(file);\r\n        reader.onloadend = () => {\r\n          setUrl(reader.result);\r\n        };\r\n  \r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        setImage(null);\r\n        setError(\"Please select an image file\");\r\n      }   \r\n    };                 \r\n   const storageRef = storage.ref(`images/${image.name}`);\r\n\r\n    return (\r\n        <div className='tweetbox'>\r\n         \r\n            <form onSubmit={(e=> e.preventDefault())}>\r\n                <div className='tweetboxInput'>\r\n                 <Avatar src={avatar} style={{height:'50px', width:'50px'}}/> \r\n               \r\n     \r\n                    <TextareaAutosize\r\n                       className='auto_height'\r\n                       value={tweet} \r\n                       onChange ={setTweetData}  \r\n                       placeholder=\"What's happening?\" \r\n                       minRows={3}\r\n                       maxRows={20}\r\n                    />                          \r\n                </div>\r\n\r\n\r\n                {\r\n                  loading?\r\n                  <div style={{float:'left', marginLeft:'40%'}}>\r\n                   <BeatLoader  className='loader-position' size={40} color={'grey'}/> \r\n                  </div>\r\n                  :\r\n                  <div>      \r\n                     <a className={image?'image-cross':'hdn'} onClick={removeimage}> \r\n                       <ImCross/>\r\n                   </a> \r\n                  </div>\r\n\r\n                }\r\n\r\n                   \r\n                 <div className={image?'show-image':'hdn'}>\r\n                    <img src={url}/>  \r\n                 </div>\r\n\r\n                 \r\n                <div className='tweetbox-ico'> \r\n                <label ref={re}  htmlFor=\"fileinput\">  <BsImage   size={25} style={{cursor:\"pointer\"}}/> </label>                        \r\n                <input         \r\n                     onChange={filehandler}\r\n                     className=\"tweetBox-imageInput\"\r\n                     id=\"fileinput\"\r\n                     type=\"file\"\r\n                     style={{display:\"none\"}}        \r\n                />                                                 \r\n                <AiOutlineFileGif size={25}/>\r\n                <BiPoll size={25} />\r\n                <GrEmoji size={25}/>\r\n                <MdSchedule size={25}/>\r\n               \r\n                </div>                 \r\n                <Button disabled={tweet || image? disabled:!disabled} onClick={postTweet} className={tweet || image?'tweetbox-button-glow':'tweetbox-button'}> Tweet</Button>\r\n            </form>\r\n\r\n\r\n            <div>\r\n\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Tweetbox as default};\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\n\r\n\r\nexport default function Modal({ open, children, onClose }) {\r\n  if (!open) return null\r\n\r\n  return ReactDom.createPortal(\r\n    <div className='comment-modal-close'>\r\n      <div className=' OVERLAY_STYLES' />\r\n      <div className='MODAL_STYLES'>\r\n        <AiOutlineClose onClick={onClose}/>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.getElementById('root')\r\n  )\r\n}","import React, {useState} from 'react'\r\nimport Modal from './Modal'\r\nimport db from './firebase'\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport firebase from 'firebase';\r\nimport { Avatar } from '@material-ui/core';\r\nimport './combox.css' \r\nimport moment from 'moment'\r\nimport { GoVerified } from 'react-icons/go';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nconst ComBox = ({name, postusername, avatar, time, text, useravatar,displayname}) => {\r\n\r\n  \r\n  const [comment, setComment]=useState('')\r\n  const rep='Replying to';\r\n  const nameu=  `@${name}`;  \r\n  const [isActive, setActive] = useState(true);\r\n\r\n  const toggleClass = () => {\r\n    setActive(!isActive);\r\n  };\r\n\r\n    const postComment = (e) =>{\r\n      \r\n        e.preventDefault(); \r\n\r\n        db.collection('posts').add({\r\n            displayname:name,\r\n            username:nameu,\r\n            avatar: useravatar,\r\n            reply:rep,\r\n            image:'',\r\n            who:postusername,\r\n            like:0,\r\n            verification:'',\r\n            text: comment,\r\n            time:firebase.firestore.FieldValue.serverTimestamp(),  \r\n        });\r\n\r\n        db.collection('notifications').doc(displayname).collection('notification').add({\r\n          notification: `${name} Replied To you`, \r\n          enable: true,\r\n          time: firebase.firestore.FieldValue.serverTimestamp(), \r\n      });\r\n          setComment(''); \r\n      \r\n        console.log(rep)\r\n    }\r\n\r\n    \r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <div  >\r\n               <ChatBubbleOutlineIcon className={!isActive? 'com-c': 'com-bw'} fontSize=\"small\" onClick={() => setIsOpen(true)}/>\r\n                 <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                   <div className='post-summery'>\r\n                      <div className='user-summery'>\r\n                           <Avatar src={avatar}/>\r\n                           <p2>{postusername}</p2>\r\n                           <GoVerified color='grey' style={{marginTop:'15px', padding:'1px'}}/>\r\n                           <p1>{moment(time?.toDate()).startOf(\"minute\").fromNow()}</p1>\r\n                      </div>\r\n                      <p>{text}</p> \r\n                    \r\n                      <br/>\r\n                       <p5>Replying to <p4>{postusername}</p4></p5>\r\n                       <br/>  \r\n                   </div>\r\n                   \r\n                   \r\n                   <div className='tweet-reply'>\r\n                       <Avatar className='reply-avatar' src={useravatar}/>\r\n                        <form className='comment-input' onSubmit={(e)=>e.preventDefault()}>\r\n\r\n                            <TextareaAutosize\r\n                              className='auto_height'\r\n                              onChange ={e=>setComment(e.target.value)} \r\n                              placeholder=\"Tweet your reply\"\r\n                              value={comment}\r\n                              type='text'\r\n                              minRows={1}\r\n                              maxRows={5}\r\n                           />   \r\n                        </form> \r\n                       \r\n                   </div>\r\n                   <button className='btn' onClick={postComment} > Reply </button> \r\n                </Modal>\r\n\r\n               \r\n\r\n\r\n\r\n\r\n\r\n\r\n       \r\n        </div>\r\n\r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default ComBox\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Post.css'\r\nimport {Avatar} from '@material-ui/core'\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { GoVerified } from 'react-icons/go';\r\nimport { FiDelete } from 'react-icons/fi';\r\nimport Modal from './Modal'\r\nimport ComBox from './ComBox'\r\nimport db, { timestamp } from './firebase'\r\nimport moment from 'moment'\r\nimport { SettingsBackupRestore } from '@material-ui/icons'\r\nimport firebase from 'firebase'\r\n\r\nfunction Post({displayname, username, verification, time, text, image, avatar, postid, name, avatarr, reply, who,like}) {\r\n   \r\n    const [counter, setcounter]= useState(like); \r\n    const [liked, isLiked]=useState(false)\r\n    const [isActive, setActive] = useState(true);\r\n    const [isActivec, setActivec] = useState(true);\r\n\r\n    const toggleClass = () => {\r\n      setActive(!isActive);\r\n    };\r\n\r\n    const counterhandler = ()=>{\r\n        setActive(!isActive);\r\n        isLiked(true); \r\n        \r\n        if(liked){\r\n            setcounter(counter-1);\r\n            isLiked(false)\r\n        }\r\n        else{\r\n            setcounter(counter+1);\r\n        }\r\n\r\n\r\n        db.collection('posts').doc(postid).update({\r\n            like:counter, \r\n        });\r\n        console.log('this is like:',like)\r\n    }\r\n\r\n\r\n    const [tweet, setTweet]= useState(\" \");\r\n\r\n    const postTweet = (e) =>{\r\n        \r\n        e.preventDefault(); \r\n        if(displayname!==name){\r\n        db.collection('posts').add({\r\n            displayname:name,\r\n            username:username,\r\n            avatar: avatarr,\r\n            image: image,\r\n            verification: verification,\r\n            text: text,\r\n            time:firebase.firestore.FieldValue.serverTimestamp(),\r\n            like:'' \r\n        });\r\n         \r\n                db.collection('notifications').doc(displayname).collection('notification').add({\r\n                notification: `${name} Re-tweeted your tweet`,\r\n                enable: true,\r\n                time: firebase.firestore.FieldValue.serverTimestamp()\r\n            });\r\n          }\r\n          else{\r\n              window.alert('You cant retweet your own tweet');\r\n          }  \r\n\r\n        setTweet(\"\"); \r\n        setActivec(!isActivec);\r\n    }\r\n   \r\n  function remove(){\r\n       \r\n      if(window.confirm('Press OK To Delete The Post')){\r\n        db.collection(\"posts\").doc(postid).delete().then(() => {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n      }\r\n \r\n  }\r\n  \r\n    return (\r\n        <div className='post'>\r\n            <div className='post-avatar'>\r\n                <Avatar src={avatar}/>\r\n            </div>\r\n            <div className='post-body'>\r\n                <div className='post-header'>\r\n                     <FiDelete \r\n                     className={`delete-icon ${ name !==displayname && \"delete-hidden\"}`} \r\n                               onClick={remove} size='25px'color='#543c42'\r\n                    />\r\n                    <div className='post-header-text'>\r\n                        <h3> {displayname}{\"\"} <span className=\"post__headerSpecial\">\r\n                             {verification && <GoVerified />}\r\n                              {username} {moment(time?.toDate()).startOf(\"minute\").fromNow()}</span>\r\n                       </h3>\r\n                    </div>\r\n                    <div className='post-header-description'>\r\n                          <p>{reply} <span className='spanwho' color='#00a2ff'>{who}</span></p>\r\n                          <br/>\r\n                         <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                 <img src={image}/>\r\n                 <div className='post-footer'>\r\n                 <ComBox  name={name} displayname={displayname} postusername={username} postid={postid} avatar={avatar} useravatar={avatarr} image={image} time={time} text={text}/> \r\n                 <RepeatIcon  className={!isActivec? 'repeat-c': 'repeat-bw'} onClick={postTweet}  fontSize=\"small\" />        \r\n                 <FavoriteTwoToneIcon  className={!isActive? 'love-c': 'love-bw'} onClick={counterhandler} fontSize=\"small\" />         \r\n                 <PublishIcon fontSize=\"small\" onClick={()=> window.alert('Under Developement')}/>                       \r\n                 </div>\r\n                 <div className='move'><p3> {like} </p3></div>\r\n                \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Post as default };\r\n","export default __webpack_public_path__ + \"static/media/a.2324b533.jpg\";","\r\nimport React, {useState, useEffect} from 'react'\r\nimport db from './firebase'\r\nimport {Avatar, Button} from '@material-ui/core'\r\n\r\nconst Comfeed = ({text, postusername, user}) => {\r\n\r\n \r\n\r\n    return (\r\n        <div className='combox'>\r\n              \r\n           <p> {user} </p>\r\n          <p>Replying to {postusername}</p>\r\n          <p>{text}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comfeed\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Feed.css'\r\nimport Tweetbox from './Tweetbox'\r\nimport Post from './Post'\r\nimport Comfeed from './Comfeed'\r\nimport ComBox from './ComBox'\r\nimport a from './a.jpg'\r\nimport aa from './aa.jpg'\r\nimport db, {timestamp} from './firebase'\r\nimport { BounceLoader, BeatLoader, BarlLoader } from 'react-spinners'\r\nimport FacebookLoading from 'react-facebook-loading';\r\n\r\nconst Feed = ({name, avatar}) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading]=useState(false);\r\n \r\n  \r\n    useEffect(() => {\r\n        setLoading(true)\r\n        db.collection(\"posts\").orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n        \r\n          setPosts(snapshot.docs.map((doc) =>(\r\n            {\r\n              id: doc.id,\r\n              data: doc.data(),               \r\n            }\r\n          )))\r\n        ); \r\n         setLoading(false)\r\n      }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className='feed'> \r\n        <div className='feed-header'>\r\n            <h2>Home </h2>\r\n        </div>\r\n\r\n\r\n         <Tweetbox avatar={avatar}  name={name}/>\r\n         \r\n      \r\n           \r\n         {\r\n           posts.map((post) => \r\n           <Post\r\n             key={post.data.text}\r\n             displayname={post.data.displayname}\r\n             username={post.data.username}\r\n             verification={post.data.verification}\r\n             text={post.data.text}\r\n             avatar={post.data.avatar}\r\n             image={post.data.image}\r\n             time={post.data.time}\r\n             like={post.data.like}\r\n             name={name}\r\n             avatarr={avatar}\r\n             postid={post.id}\r\n             reply={post.data.reply}\r\n             who={post.data.who}\r\n             like={post.data.like}\r\n           />\r\n           \r\n         )} \r\n\r\n         \r\n         {\r\n           loading?\r\n            <div>\r\n\r\n           </div>:\r\n         <div className='loader'>     \r\n              \r\n         </div>\r\n\r\n         }\r\n         \r\n\r\n                        \r\n\r\n          \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './Right.css'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n  } from \"react-twitter-embed\";\r\n  import { FiSearch } from 'react-icons/fi';\r\n\r\nconst Right = () => {\r\n    return (\r\n        <div className='right'>\r\n           <div className='right-input'>\r\n               <FiSearch size= '20px'  className='right-search-icon'/>   \r\n                <input type='text' placeholder='Search Twitter'/>\r\n           </div>\r\n           <div className='right-container'>\r\n                <h2>Trends for you</h2>\r\n             \r\n                \r\n                <TwitterTimelineEmbed sourceType='profile' screenName='KAKA' options={{height:300}} />\r\n                <TwitterTimelineEmbed sourceType='profile' screenName='LFC' options={{height:300}} />\r\n                <TwitterTweetEmbed tweetId={\"1399698641535832068\"}/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Right\r\n\r\n","import React,{useEffect, useState} from \"react\";\r\nimport './Notification.css'\r\nimport db, {timestamp} from './firebase'\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport { BounceLoader, BeatLoader, BarlLoader } from 'react-spinners'\r\n\r\nconst Notification = ({name}) => {\r\n\r\n    const [loading, setLoading]=useState(false);\r\n    const [notification, setNotification]=useState([])\r\n    const [color, setColor]=useState(true)\r\n    const [color2, setColor2]=useState(false)\r\n    const [ready, setReady]=useState(false)\r\n\r\n   \r\n    function toggoleColor(){\r\n      setColor2(!color2)\r\n      setColor(!color)\r\n    }\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        db.collection('notifications').doc(name).collection('notification').orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n          setNotification(snapshot.docs.map((doc) =>(\r\n            {\r\n              id:doc.id,\r\n              data: doc.data(),               \r\n            }\r\n          )))\r\n        ); \r\n        setLoading(false)\r\n        setReady(true)\r\n      }, [notification]);\r\n\r\n\r\n    return (\r\n        <div className='notification'>\r\n           <div className='flexbox'>\r\n                <h3 onClick={toggoleColor} className='lefth'>All</h3>\r\n                <h3 onClick={toggoleColor} className='righth'>Mentions</h3>\r\n           </div>\r\n           <hr className={color?'move-hr-bg':'move-hr'}/> \r\n\r\n           <hr className={color2?'move-hr-r-bg':'move-hr-r'}/> \r\n           <hr/>\r\n\r\n                  {\r\n                    notification.length!==0?\r\n                    notification.map(n=>(\r\n                      <div className='flex'>\r\n                          <h2><TwitterIcon size={45}/></h2>\r\n                          <p>{n.data.notification} <hr/></p>              \r\n                      </div>\r\n                                \r\n                  ))   :\r\n                      <div>\r\n                          <p>You currently have no notifications</p>\r\n                          <p>When another user comments or retweets to your tweets, A notification warning will appear on the sidebar #Notification</p>\r\n                          <p> And the notification will be displayed here</p>\r\n                      </div>\r\n\r\n                  }\r\n              \r\n                  {\r\n                      loading?\r\n                        <div >\r\n\r\n                        </div>\r\n                            :\r\n                        <div className='loader'>     \r\n                            \r\n                        </div>\r\n                  }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","export default __webpack_public_path__ + \"static/media/tt.4882770d.png\";","import './App.css';\nimport React, {useState,useRef, useEffect} from \"react\";\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Right from './Right';\nimport Notification from './Notification';\nimport {GoogleLogin} from 'react-google-login'\nimport db from './firebase'\nimport a from './tt.png'\nimport { ImTwitter } from 'react-icons/im';\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\n\n\nfunction App() {\n\n  const [name, setName] =useState('');\n  const [email, setEmail] =useState('');\n  const [avatar, setAvatar] =useState('');\n\n\n  function responseGoogle (response){\n    \n    setEmail(response.profileObj.email)           \n    setName(response.profileObj.name)           \n    setAvatar(response.profileObj.imageUrl)           \n      \n  }\n\n  useEffect(() => {\n    {\n      db.collection('users').doc().set({\n        username: name,\n        email: email,\n        avatar: avatar,\n      })\n    }\n  }, [])\n\n\n  \n  return (\n    <div> \n          {!name? ( \n\n                 <div className=\"left\">\n                   <img src={a}/>\n                   <ImTwitter color='#00a2ff' size='40px' className='ttrico'/>\n                    <h1 style={{float:'left', marginLeft:'-3%', minWidth:'35%', marginTop:'15%', fontSize:'60px'}}>\n                      Happened Before! \n                      <span style={{float:'left',marginTop:'3%', marginLeft:'2%'}}>\n                      <p2 style={{fontSize:'30px'}} > Join TanTwitter today.</p2>\n                      </span>\n                    </h1>\n\n\n                <div className='login'>\n                     <GoogleLogin \n                      render={renderProps => (\n                        <button className='loginbtn' onClick={renderProps.onClick} disabled={renderProps.disabled}><p style={{fontSize:'20px', color:'white'}}>Log In With Google</p></button>\n                      )}\n                      clientId=\"766075204483-lulb8u6h2g1v0h8kp0gsnirlntf170en.apps.googleusercontent.com\"\n                      buttonText=\"Login With Google\"\n                      onSuccess={responseGoogle}\n                      onFailure={responseGoogle}\n                      cookiePolicy={'single_host_origin'}\n                      isSignedIn={true}\n                 />\n              </div> \n              </div>) \n        :( <div className='app'>        \n         <Router>\n\n           <Sidebar name={name} avatar={avatar}/>\n           \n            <Switch>\n\n              <Route path=\"/React-TwitterClone\">\n              <Feed name={name} avatar={avatar}/>\n              </Route>              \n              <Route path=\"/notification\">\n               <Notification name={name}/>\n              </Route>\n\n            </Switch> \n\n            <Right/>\n\n        \n      </Router>  \n      </div>\n     )}\n   \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}