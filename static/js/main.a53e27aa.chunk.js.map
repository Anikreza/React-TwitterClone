{"version":3,"sources":["SidebarOption.js","aa.jpg","Sidebar.js","firebase.js","Tweetbox.js","Modal.js","ComBox.js","Post.js","a.jpg","Comfeed.js","Feed.js","Right.js","tt.png","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","size","Sidebar","name","avatar","useState","modal","setModal","RiHome7Fill","FiHash","GrNotification","MailOutlineIcon","BsBookmark","SubjectIcon","PermIdentityIcon","CgMoreO","Button","variant","fullWidth","onClick","Avatar","src","isOpen","portal","onClose","style","display","paddingLeft","paddingTop","fontWeight","href","onclick","render","renderProps","disabled","clientId","buttonText","onLogoutSuccess","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","FieldValue","serverTimestamp","Tweetbox","re","useRef","tweet","setTweet","image","setImage","url","setUrl","setError","setProgress","nameu","filehandler","e","a","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","storageRef","ref","onSubmit","preventDefault","height","width","value","onChange","placeholder","minRows","maxRows","htmlFor","cursor","id","type","maxHeight","put","on","snap","percentage","bytesTransferred","totalBytes","err","collection","add","displayname","username","verification","time","like","Modal","open","children","ReactDom","createPortal","document","getElementById","ComBox","postusername","useravatar","comment","setComment","rep","isActive","setIsOpen","fontSize","color","marginTop","padding","moment","toDate","startOf","fromNow","reply","who","alert","console","log","Post","postid","avatarr","counter","setcounter","liked","isLiked","setActive","isActivec","setActivec","useEffect","window","confirm","doc","delete","then","catch","error","update","Feed","posts","setPosts","orderBy","onSnapshot","snapshot","docs","map","data","post","Right","sourceType","screenName","options","tweetId","App","setName","email","setEmail","setAvatar","responseGoogle","response","profileObj","imageUrl","set","float","marginLeft","minWidth","onSuccess","onFailure","cookiePolicy","isSignedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a53e27aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ active, text, Icon }) {\r\n  return (\r\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\r\n      <h3> \r\n         <Icon size={25}/>\r\n      </h3>\r\n\r\n      <h2>{text}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;","export default __webpack_public_path__ + \"static/media/aa.14327386.jpg\";","import React,  {useState} from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FiHash } from 'react-icons/fi';\r\nimport { CgMoreO } from 'react-icons/cg';\r\nimport { GrNotification }  from 'react-icons/gr';\r\nimport { RiHome7Fill } from 'react-icons/ri';\r\nimport { BsBookmark } from 'react-icons/bs';\r\nimport {   BsThreeDots } from 'react-icons/bs';\r\nimport a from './aa.jpg'\r\nimport {Avatar} from '@material-ui/core'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport PureModal from 'react-pure-modal';\r\nimport 'react-pure-modal/dist/react-pure-modal.min.css';\r\n\r\nfunction Sidebar({name, avatar}) {\r\n\r\n  const [modal, setModal] = useState(false);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n\r\n      <SidebarOption active Icon={RiHome7Fill} text=\"Home\" />\r\n      <SidebarOption Icon={FiHash} text=\"  Explore\" />\r\n      <SidebarOption Icon={GrNotification} text=\"Notifications\" />\r\n      <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n      <SidebarOption Icon={BsBookmark} text=\"Bookmarks\" />\r\n      <SidebarOption Icon={SubjectIcon } text=\"Lists\" />\r\n      <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n      <SidebarOption Icon={CgMoreO} text=\"  More\" />   \r\n      \r\n\r\n      {/* Button -> Tweet */}\r\n      <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n        Tweet\r\n      </Button>\r\n\r\n      <div onClick={() => setModal(true)} className='sidebar-bottom'>\r\n      <Avatar src={avatar}/> \r\n\r\n        <h4>{name}<br/> <p1 className='sm'>@{name}</p1> </h4>\r\n        \r\n        <BsThreeDots size='20px'/> \r\n      </div>\r\n\r\n      <PureModal \r\n              className='logout-bottom'\r\n              isOpen={modal} \r\n              portal={true}\r\n              onClose={() => {\r\n                setModal(false);\r\n                return true;\r\n               }}>\r\n                 <div style={{display:'flex'}}>\r\n                 <Avatar src={avatar}/>\r\n                 <h4 style={{paddingLeft:'8px'}}>{name}<br/> <p1 className='sm'>@{name}</p1> </h4>\r\n                 </div>\r\n                 <h4 style={{paddingLeft:'5px', paddingTop:'10px', fontWeight:'lighter'}}>Add an existing account</h4>\r\n                 <a href=\"\" onclick=\"dummy(0);return false;\" > \r\n              <GoogleLogout\r\n                  render={renderProps => (\r\n                    <button className='logout' onClick={renderProps.onClick} disabled={renderProps.disabled}>Log Out @{name}</button>\r\n                  )}\r\n                  clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\r\n                  buttonText=\"Logout\"\r\n                  onLogoutSuccess\r\n              />  \r\n       </a>\r\n                \r\n        </PureModal>\r\n\r\n\r\n\r\n\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB23QiSgX9TVOyyy2wTATI_FoPe2UQzgbg\",\r\n  authDomain: \"twitter-clone-69ba6.firebaseapp.com\",\r\n  projectId: \"twitter-clone-69ba6\",\r\n  storageBucket: \"twitter-clone-69ba6.appspot.com\",\r\n  messagingSenderId: \"766075204483\",\r\n  appId: \"1:766075204483:web:ee192ff2fecb3e9e5c7cb6\",\r\n  measurementId: \"G-MN25RN4HQY\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst storage = firebase.storage();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { storage, timestamp, db as default };","import React, {useState, useEffect, useRef} from 'react'\r\nimport './Tweetbox.css'\r\nimport a from './aa.jpg'\r\nimport {Avatar, Button} from '@material-ui/core'\r\nimport { GrEmoji } from 'react-icons/gr';\r\nimport { AiOutlineFileGif } from 'react-icons/ai';\r\nimport { BiPoll } from 'react-icons/bi';\r\nimport { BsImage } from 'react-icons/bs';\r\nimport {MdSchedule } from 'react-icons/md';\r\nimport db from './firebase'\r\nimport {storage, timestamp} from './firebase'\r\nimport moment from 'moment'\r\nimport firebase from 'firebase';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\n\r\nfunction Tweetbox ({avatar, name}) {\r\n\r\n    \r\n    const re =useRef() \r\n    const [tweet, setTweet]= useState(\"\");\r\n    const [image, setImage]=useState(\" \");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [timeStamp,setTimestamp]=useState(\"\");\r\n    const [progress, setProgress] = useState(0);   \r\n    const nameu=  `@${name}`; \r\n\r\n\r\n    const postTweet =() =>{       \r\n        storageRef.put(image).on(\r\n          \"state_changed\",\r\n          (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n          },\r\n          (err) => {\r\n            setError(err);\r\n          },  \r\n          async () => {\r\n            db.collection('posts').add({\r\n              displayname: name,\r\n              username: nameu,\r\n              avatar: avatar,\r\n              verification: false,\r\n              image: url,\r\n              text: tweet,\r\n              time:firebase.firestore.FieldValue.serverTimestamp(),\r\n              like:'',\r\n            });\r\n              setUrl(null);\r\n              setTweet(\"\");     \r\n          }          \r\n        );      \r\n    }\r\n\r\n  \r\n\r\n\r\n    const filehandler = async (e) => {\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        let reader = new FileReader();\r\n  \r\n        await setImage(file);\r\n        reader.onloadend = () => {\r\n          setUrl(reader.result);\r\n        };\r\n  \r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        setImage(null);\r\n        setError(\"Please select an image file\");\r\n      }   \r\n    };                 \r\n   const storageRef = storage.ref(`images/${image.name}`);\r\n\r\n   function auto_height(e) {  /* javascript */\r\n    e.style.height = \"1px\";\r\n    e.style.height = (e.scrollHeight)+\"px\";\r\n}\r\n\r\n    return (\r\n        <div className='tweetbox'>\r\n            <form onSubmit={(e=> e.preventDefault())}>\r\n                <div className='tweetboxInput'>\r\n                 <Avatar src={avatar} style={{height:'50px', width:'50px'}}/> \r\n               \r\n     \r\n                    <TextareaAutosize\r\n                       className='auto_height'\r\n                       value={tweet} \r\n                       onChange ={e=>setTweet(e.target.value)} \r\n                       placeholder=\"What's happening?\" \r\n                       minRows={3}\r\n                       maxRows={20}\r\n                    />                          \r\n                </div>\r\n\r\n                <div className='tweetbox-ico'> \r\n                <label ref={re}  htmlFor=\"fileinput\">  <BsImage   size={25} style={{cursor:\"pointer\"}}/> </label>                        \r\n                <input         \r\n                     onChange={filehandler}\r\n                     className=\"tweetBox-imageInput\"\r\n                     id=\"fileinput\"\r\n                     type=\"file\"\r\n                     style={{display:\"none\"}}        \r\n                />                                                 \r\n                <AiOutlineFileGif size={25}/>\r\n                <BiPoll size={25} />\r\n                <GrEmoji size={25}/>\r\n                <MdSchedule size={25}/>\r\n\r\n                </div>           \r\n                <img  src={url} style={{maxHeight:\"350px\"}} /> \r\n              \r\n                <Button  onClick={postTweet} className='tweetbox-button'> Tweet</Button>\r\n               \r\n            </form>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Tweetbox as default};\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\n\r\n\r\nexport default function Modal({ open, children, onClose }) {\r\n  if (!open) return null\r\n\r\n  return ReactDom.createPortal(\r\n    <div className='comment-modal-close'>\r\n      <div className=' OVERLAY_STYLES' />\r\n      <div className='MODAL_STYLES'>\r\n        <AiOutlineClose onClick={onClose}/>\r\n        {children}\r\n      </div>\r\n    </div>,\r\n    document.getElementById('root')\r\n  )\r\n}","import React, {useState} from 'react'\r\nimport Modal from './Modal'\r\nimport db from './firebase'\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport firebase from 'firebase';\r\nimport { Avatar } from '@material-ui/core';\r\nimport './combox.css' \r\nimport moment from 'moment'\r\nimport { GoVerified } from 'react-icons/go';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\nconst ComBox = ({name, postusername, avatar, time, text, useravatar}) => {\r\n\r\n  \r\n  const [comment, setComment]=useState('')\r\n  const rep='Replying to';\r\n  const nameu=  `@${name}`;  \r\n  const [isActive, setActive] = useState(true);\r\n\r\n  const toggleClass = () => {\r\n    setActive(!isActive);\r\n  };\r\n\r\n    const postComment = (e) =>{\r\n      \r\n        e.preventDefault(); \r\n\r\n        db.collection('posts').add({\r\n            displayname:name,\r\n            username:nameu,\r\n            avatar: useravatar,\r\n            reply:rep,\r\n            who:postusername,\r\n            text: comment,\r\n            time:firebase.firestore.FieldValue.serverTimestamp(),  \r\n        });\r\n          setComment(''); \r\n        alert(`Replied to ${postusername}`)  \r\n        console.log(rep)\r\n    }\r\n\r\n    \r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <div  >\r\n               <ChatBubbleOutlineIcon className={!isActive? 'com-c': 'com-bw'} fontSize=\"small\" onClick={() => setIsOpen(true)}/>\r\n                 <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                   <div className='post-summery'>\r\n                      <div className='user-summery'>\r\n                           <Avatar src={avatar}/>\r\n                           <p2>{postusername}</p2>\r\n                           <GoVerified color='grey' style={{marginTop:'15px', padding:'1px'}}/>\r\n                           <p1>{moment(time?.toDate()).startOf(\"minute\").fromNow()}</p1>\r\n                      </div>\r\n                      <p>{text}</p> \r\n                    \r\n                      <br/>\r\n                       <p5>Replying to <p4>{postusername}</p4></p5>\r\n                       <br/>  \r\n                   </div>\r\n                   \r\n                   \r\n                   <div className='tweet-reply'>\r\n                       <Avatar className='reply-avatar' src={useravatar}/>\r\n                        <form className='comment-input' onSubmit={(e)=>e.preventDefault()}>\r\n\r\n                            <TextareaAutosize\r\n                              className='auto_height'\r\n                              onChange ={e=>setComment(e.target.value)} \r\n                              placeholder=\"Tweet your reply\"\r\n                              value={comment}\r\n                              type='text'\r\n                              minRows={1}\r\n                              maxRows={5}\r\n                           />   \r\n                        </form> \r\n                       \r\n                   </div>\r\n                   <button className='btn' onClick={postComment} > Reply </button> \r\n                </Modal>\r\n\r\n               \r\n\r\n\r\n\r\n\r\n\r\n\r\n       \r\n        </div>\r\n\r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default ComBox\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Post.css'\r\nimport {Avatar} from '@material-ui/core'\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { GoVerified } from 'react-icons/go';\r\nimport { FiDelete } from 'react-icons/fi';\r\nimport Modal from './Modal'\r\nimport ComBox from './ComBox'\r\nimport db, { timestamp } from './firebase'\r\nimport moment from 'moment'\r\nimport { SettingsBackupRestore } from '@material-ui/icons'\r\n\r\nfunction Post({displayname, username, verification, time, text, image, avatar, postid, name, avatarr, reply, who,like}) {\r\n   \r\n    const [counter, setcounter]= useState(like); \r\n    const [liked, isLiked]=useState(false)\r\n    const [isActive, setActive] = useState(true);\r\n    const [isActivec, setActivec] = useState(true);\r\n\r\n    const toggleClass = () => {\r\n      setActive(!isActive);\r\n    };\r\n\r\n    const counterhandler = ()=>{\r\n        setActive(!isActive);\r\n        isLiked(true); \r\n        \r\n        if(liked){\r\n            setcounter(counter-1);\r\n            isLiked(false)\r\n        }\r\n        else{\r\n            setcounter(counter+1);\r\n        }\r\n\r\n\r\n        db.collection('posts').doc(postid).update({\r\n            like:counter, \r\n        });\r\n        console.log('this is like:',like)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('this is like:',like)\r\n    }, [])\r\n\r\n\r\n    const [tweet, setTweet]= useState(\" \");\r\n    const postTweet = (e) =>{\r\n        \r\n        e.preventDefault(); \r\n        db.collection('posts').add({\r\n            displayname:name,\r\n            username:username,\r\n            avatar: avatarr,\r\n            image: image,\r\n            verification: verification,\r\n            text: text,\r\n            time:time,\r\n        });\r\n        setTweet(\" \"); \r\n        setActivec(!isActivec);\r\n    }\r\n   \r\n  function remove(){\r\n       \r\n      if(window.confirm('Press OK To Delete The Post')){\r\n        db.collection(\"posts\").doc(postid).delete().then(() => {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n      }\r\n \r\n  }\r\n  \r\n    return (\r\n        <div className='post'>\r\n            <div className='post-avatar'>\r\n                <Avatar src={avatar}/>\r\n            </div>\r\n            <div className='post-body'>\r\n                <div className='post-header'>\r\n                     <FiDelete \r\n                     className={`delete-icon ${ name !==displayname && \"delete-hidden\"}`} \r\n                               onClick={remove} size='25px'color='#543c42'\r\n                    />\r\n                    <div className='post-header-text'>\r\n                        <h3> {displayname}{\"\"} <span className=\"post__headerSpecial\">\r\n                             {verification && <GoVerified />}\r\n                              {username} {moment(time?.toDate()).startOf(\"minute\").fromNow()}</span>\r\n                       </h3>\r\n                    </div>\r\n                    <div className='post-header-description'>\r\n                          <p>{reply} <span className='spanwho' color='#00a2ff'>{who}</span></p>\r\n                          <br/>\r\n                         <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                 <img src={image}/>\r\n                 <div className='post-footer'>\r\n                 <ComBox  name={name} postusername={username} postid={postid} avatar={avatar} useravatar={avatarr} image={image} time={time} text={text}/> \r\n                 <RepeatIcon  className={!isActivec? 'repeat-c': 'repeat-bw'} onClick={postTweet}  fontSize=\"small\" />        \r\n                 <FavoriteTwoToneIcon  className={!isActive? 'love-c': 'love-bw'}     onClick={counterhandler} fontSize=\"small\" />         \r\n                 <PublishIcon fontSize=\"small\" />                       \r\n                 </div>\r\n                 <div className='move'><p3> {like} </p3></div>\r\n                \r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Post as default };\r\n","export default __webpack_public_path__ + \"static/media/a.2324b533.jpg\";","\r\nimport React, {useState, useEffect} from 'react'\r\nimport db from './firebase'\r\nimport {Avatar, Button} from '@material-ui/core'\r\n\r\nconst Comfeed = ({text, postusername, user}) => {\r\n\r\n \r\n\r\n    return (\r\n        <div className='combox'>\r\n              \r\n           <p> {user} </p>\r\n          <p>Replying to {postusername}</p>\r\n          <p>{text}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comfeed\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Feed.css'\r\nimport Tweetbox from './Tweetbox'\r\nimport Post from './Post'\r\nimport Comfeed from './Comfeed'\r\nimport ComBox from './ComBox'\r\nimport a from './a.jpg'\r\nimport aa from './aa.jpg'\r\nimport db, {timestamp} from './firebase'\r\n\r\nconst Feed = ({name, avatar}) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n \r\n  \r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy(\"time\", \"desc\").onSnapshot((snapshot) =>\r\n          setPosts(snapshot.docs.map((doc) =>(\r\n            {\r\n              id: doc.id,\r\n              data: doc.data(),               \r\n            }\r\n          )))\r\n        ); \r\n      }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('this is replyda:',posts.reply)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='feed'> \r\n        <div className='feed-header'>\r\n            <h2>Home </h2>\r\n        </div>\r\n\r\n        \r\n         <Tweetbox avatar={avatar}  name={name}/>\r\n         \r\n             \r\n         {posts.map((post) => \r\n          <Post\r\n            key={post.data.text}\r\n            displayname={post.data.displayname}\r\n            username={post.data.username}\r\n            verification={post.data.verification}\r\n            text={post.data.text}\r\n            avatar={post.data.avatar}\r\n            image={post.data.image}\r\n            time={post.data.time}\r\n            like={post.data.like}\r\n            name={name}\r\n            avatarr={avatar}\r\n            postid={post.id}\r\n            reply={post.data.reply}\r\n            who={post.data.who}\r\n            like={post.data.like}\r\n          />\r\n          \r\n        )}\r\n\r\n                        \r\n\r\n          \r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './Right.css'\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n  } from \"react-twitter-embed\";\r\n  import { FiSearch } from 'react-icons/fi';\r\n\r\nconst Right = () => {\r\n    return (\r\n        <div className='right'>\r\n           <div className='right-input'>\r\n               <FiSearch size= '20px'  className='right-search-icon'/>   \r\n                <input type='text' placeholder='Search Twitter'/>\r\n           </div>\r\n           <div className='right-container'>\r\n                <h2>Trends for you</h2>\r\n             \r\n                \r\n                <TwitterTimelineEmbed sourceType='profile' screenName='KAKA' options={{height:300}} />\r\n                <TwitterTimelineEmbed sourceType='profile' screenName='LFC' options={{height:300}} />\r\n                <TwitterTweetEmbed tweetId={\"1399698641535832068\"}/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Right\r\n\r\n","export default __webpack_public_path__ + \"static/media/tt.4882770d.png\";","import './App.css';\nimport React, {useState,useRef, useEffect} from \"react\";\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Right from './Right';\nimport {GoogleLogin} from 'react-google-login'\nimport db from './firebase'\nimport a from './tt.png'\nimport { ImTwitter } from 'react-icons/im';\n\n\n\nfunction App() {\n\n  const [name, setName] =useState('');\n  const [email, setEmail] =useState('');\n  const [avatar, setAvatar] =useState('');\n\n\n  function responseGoogle (response){\n    \n    setEmail(response.profileObj.email)           \n    setName(response.profileObj.name)           \n    setAvatar(response.profileObj.imageUrl)           \n      \n  }\n\n  useEffect(() => {\n    {\n      db.collection('users').doc().set({\n        username: name,\n        email: email,\n        avatar: avatar,\n      })\n    }\n  }, [])\n\n\n  \n  return (\n    <div> \n          {!name? ( \n\n                 <div className=\"left\">\n                   <img src={a}/>\n                   <ImTwitter color='#00a2ff' size='40px' className='ttrico'/>\n                    <h1 style={{float:'left', marginLeft:'-3%', minWidth:'35%', marginTop:'15%', fontSize:'60px'}}>\n                      Happened Before! \n                      <span style={{float:'left',marginTop:'3%', marginLeft:'2%'}}>\n                      <p2 style={{fontSize:'30px'}} > Join TanTwitter today.</p2>\n                      </span>\n                    </h1>\n\n\n                <div className='login'>\n                     <GoogleLogin \n                      render={renderProps => (\n                        <button className='loginbtn' onClick={renderProps.onClick} disabled={renderProps.disabled}><p style={{fontSize:'20px', color:'white'}}>Log In With Google</p></button>\n                      )}\n                      clientId=\"766075204483-lulb8u6h2g1v0h8kp0gsnirlntf170en.apps.googleusercontent.com\"\n                      buttonText=\"Login With Google\"\n                      onSuccess={responseGoogle}\n                      onFailure={responseGoogle}\n                      cookiePolicy={'single_host_origin'}\n                      isSignedIn={true}\n                 />\n              </div> \n              </div>) \n        :( <div className='app'> \n\n         <Sidebar name={name} avatar={avatar}/>\n\n         <Feed name={name} avatar={avatar}/>\n         <Right/>\n      </div>\n     )}\n   \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}